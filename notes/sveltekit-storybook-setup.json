{"status":"seedling","statusIcon":"ðŸŒ±","title":"Setting up a SvelteKit project with Storybook","description":"Setting up Storybook on a SvelteKit project doesn't work out of the box using the config tool. This guide walks you through a few extra steps needed to get SvelteKit and Storybook running.","slug":"sveltekit-storybook-setup","publish":true,"lastmod":"2022-04-19T00:00:00.000Z","date":"2022-04-19T00:00:00.000Z","aliases":["Set up SvelteKit with Storybook","Sveltekit Storybook setup"],"tags":["status/seedling","topic/webdev","taxonomy/reference"],"timeToRead":2,"internalLinks":[],"flashcards":[],"html":"<p>This will walk you through the steps to set up a new <em>SvelteKit</em> project with <em>StorybookJS</em>. It will also configure Storybook to use <em>ViteJS</em>. Using Vite gets the local storybook server up and running around ~50x faster.</p>\n<blockquote><p>Note: Iâ€™ve opted to use TypeScript in this guide, but it works just as well for JavaScript. As of April 2022, Storybook supports svelte components implemented in TS, but does <strong>not</strong> support <em>stories</em> written in TypeScript yet.</p></blockquote>\n<p>Initialize a <em>SvelteKit</em> project:</p>\n<pre class=\"language-bash\"><!-- HTML_TAG_START --><code class=\"language-bash\"><span class=\"token function\">npm</span> init svelte@next my-sveltekit-app</code><!-- HTML_TAG_END --></pre>\n<p>Confirm that it can install <code>create-svelte@next</code> then continue to the SvelteKit config options. My preferred config is as follows:</p>\n<table><thead><tr><th>Option</th>\n<th>Selection</th></tr></thead>\n<tbody><tr><td>Which Svelte app template?</td>\n<td>Skeleton project</td></tr>\n<tr><td>Add type checking?</td>\n<td>TypeScript</td></tr>\n<tr><td>Add ESLint for code linting?</td>\n<td>Yes</td></tr>\n<tr><td>Add Prettier for code formatting?</td>\n<td>Yes</td></tr>\n<tr><td>Add Playwright for browser testing?</td>\n<td>No</td></tr></tbody></table>\n<p>With <em>SvelteKit</em> configured, we can start setting up <em>StorybookJS</em>:</p>\n<pre class=\"language-bash\"><!-- HTML_TAG_START --><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> my-sveltekit-app\nnpx sb init --builder @storybook/builder-vite</code><!-- HTML_TAG_END --></pre>\n<p>The automated <em>StorybookJS</em> configuration tool will run and set things up for a Svelte project. Itâ€™ll ask you if you want to set up the storybook linter plugin:</p>\n<table><thead><tr><th>Option</th>\n<th>Selection</th></tr></thead>\n<tbody><tr><td>Do you want to run the â€˜eslintPluginâ€™ fix on your project?</td>\n<td>Yes</td></tr></tbody></table>\n<p>Once the setup is done, there are a couple manual config steps we need to go through.</p>\n<p>First we need to tell Storybook to use <em>CommonJS</em>. Create the file <code>.storybook/package.json</code> and add the following to it:</p>\n<pre class=\"language-json\"><!-- HTML_TAG_START --><code class=\"language-json\"><span class=\"token comment\">// .storybook/package.json</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span>\n<span class=\"token punctuation\">&#125;</span></code><!-- HTML_TAG_END --></pre>\n<p>Then we need to remove Storybookâ€™s preprocessing config and tell <em>ViteJS</em> how to find and preprocess our svelte files:</p>\n<ol><li>Remove <code>&quot;preprocess&quot;: require(&quot;../svelte.config.js&quot;).preprocess</code></li>\n<li>Import the svelte preprocessor: <code>const preprocess = require(&#39;svelte-preprocess&#39;);</code></li>\n<li>Import the <code>path</code> package to help with include paths: <code>const path = require(&#39;path&#39;);</code></li>\n<li>Set the <em>ViteJS</em> config to use the svelte preprocessor and include paths (see the <code>async viteFinal(config, {configType}) {...}</code> below)</li></ol>\n<p>The final <code>.storybook/main.js</code> file should look like this:</p>\n<pre class=\"language-js\"><!-- HTML_TAG_START --><code class=\"language-js\"><span class=\"token comment\">// .storybook/main.js</span>\n<span class=\"token keyword\">const</span> preprocess <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svelte-preprocess'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string-property property\">\"stories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"../src/**/*.stories.mdx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"../src/**/*.stories.@(js|jsx|ts|tsx|svelte)\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"addons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@storybook/addon-links\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"@storybook/addon-essentials\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"@storybook/addon-svelte-csf\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"framework\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@storybook/svelte\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"core\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string-property property\">\"builder\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@storybook/builder-vite\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">viteFinal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> configType <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    config<span class=\"token punctuation\">.</span>preprocess <span class=\"token operator\">=</span> <span class=\"token function\">preprocess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">.</span>alias <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\t  <span class=\"token comment\">// alias: path</span>\n\t  <span class=\"token literal-property property\">$components</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/components'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">$routes</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/routes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">$lib</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/lib'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span></code><!-- HTML_TAG_END --></pre>\n<blockquote><p>Note: if you have different include path aliases, youâ€™ll want to make sure that the ones in <code>.storybook/main.js</code> match your <code>svelte.config.js</code> and <code>tsconfig.json</code> aliases</p></blockquote>\n<p>Voila! You should be all set. Running <code>npm run dev</code> and navigating to <code>localhost:3000</code> in your browser should show a basic sveltekit skeleton page:</p>\n<p>To get <em>StorybookJS</em> up, run <code>npm run storybook</code> and navigate to <code>localhost:6006</code> in your browser. You should see the welcome page and a few example component stories:</p>\n<p>And check out how fast the storybook server launched! ðŸ¤¯</p>\n<p>Just for comparison, hereâ€™s how long it took without using <em>ViteJS</em>:</p>","css":{"code":"","map":null},"head":"","href":"/notes/sveltekit-storybook-setup","component":{}}