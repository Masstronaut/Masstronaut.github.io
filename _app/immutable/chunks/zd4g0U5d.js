import{t as m,a as C}from"./Bj2ZHtgv.js";import"./DBHxkW5N.js";import{s,f as w,R as v}from"./fxLts69-.js";import{h as a}from"./RJ7APweJ.js";import{l as b,s as _}from"./BMf7CqPI.js";import{M as I}from"./RATmZUUD.js";const D={title:"Open neovim edgebar with focus set",description:"A deep dive into neovim config, controlling focus, pane management with edgy.nvim, and a little open source contribution to boot!",slug:"notes/focus-edgy-view",publish:!0,lastmod:"2024-08-10T00:00:00.000Z",date:"2024-08-10T00:00:00.000Z",aliases:null,tags:["status/seedling","topic/neovim","topic/opensource"],readTime:9,internalLinks:["/notes/use-neovim"],flashcards:[]},{title:$,description:L,slug:W,publish:S,lastmod:G,date:O,aliases:R,tags:M,readTime:U,internalLinks:V,flashcards:J}=D;var F=m('<p>Recently I <a href="/notes/use-neovim">switched to Neovim</a> as my go-to text editor, and have been configuring it as an IDE. The flexibility to have it behave exactly the way I want is amazing!</p> <p>One GUI element of VS Code that I’ve missed is having a sidebar with hotkeys to quickly jump between different views, such as Git and my project’s file tree. Fortunately, there’s a great library by <a href="https://github.com/folke" rel="nofollow">folke</a> that is designed to create and manage sidebars: <a href="https://github.com/folke/edgy.nvim" rel="nofollow">edgy.nvim</a>. The sidebar config is reminiscent of declarative languages like CSS, so setting up my sidebar felt pretty familiar. To start, I created a side with three <a href="https://github.com/nvim-neo-tree/neo-tree.nvim" rel="nofollow">neo-tree.nvim</a> views:</p> <ol><li>A file tree (explorer) view</li> <li>A list of my open buffers</li> <li>Git tree view of my modified files</li></ol> <p>The <a href="https://github.com/folke/lazy.nvim/?tab=readme-ov-file" rel="nofollow">lazy.nvim</a> edgy config for that looks like this:</p> <!><!> <p>Overall this is great! I get a sidebar with all the panels I want in one place. It has a problem though. Perhaps because the three <code>pinned</code> views of the edgebar are opened in the order I declare them (files -> buffers -> git), my focus always ends up in the git view when I open it. I put it on the bottom because I use it the least, though. What I really want is to default to the Files view getting focus, with a specific binding for each of the views if I want to focus a specific one.</p> <h2 id="programmatically-focusing-a-window-in-neovim"><a aria-hidden="true" tabindex="-1" href="#programmatically-focusing-a-window-in-neovim"><span class="icon icon-link"></span></a><a href="#programmatically-focusing-a-window-in-neovim" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Programmatically focusing a window in Neovim</h2> <p>After a quick search, I found the API for setting focus on a window:</p> <!><!> <p>Super simple and straightforward! Unfortunately, it requires a window ID. I have no idea what my window IDs are. The good news is that Neovim has a similarly simple API for that one, too.</p> <!><!> <p>I’m going to feel like such a champion calling a function that lists all my wins!</p> <p>Now I’ve got a list of window IDs and and an API to set my focus to one of them. The only question that remains is: which one is which? I have no hope of figuring out which <code>window_ids</code> integer corresponds to which window. For this one I’m going to need to use the <a href="https://github.com/folke/edgy.nvim?tab=readme-ov-file#-api" rel="nofollow">edgy API</a>. The <code>get_win(window?)</code> API looks like what I’m after!</p> <p>I tried calling it with one of my window IDs, only to have the LSP tell me I’m doing it wrong! Apparently the API takes a <code>window</code> object, not an integer?</p> <picture><source media="(prefers-color-scheme: dark)" srcset="https://img.allandeutsch.com/allandeutschcom-note-images/6bb0a76fd64b73c476f50e5212c5eb83.png"> <source media="(prefers-color-scheme: light )" srcset="https://img.allandeutsch.com/allandeutschcom-note-images/467b41e0d88bd7afcb7d4a5bf8508f7a.png"> <img alt="A code block on allandeutsch.com rendered to show the filename in a tab along the top bar of the code block"></picture> <p>What the heck, how am I supposed to get a window object if not via a window ID from the <code>nvim_list_wins()</code> API?</p> <p>I did some digging which ultimately resulted in me reading the <a href="https://github.com/folke/edgy.nvim/blob/ebb77fde6f5cb2745431c6c0fe57024f66471728/lua/edgy/editor.lua#L167" rel="nofollow">edgy source code for the <code>get_win()</code> function</a> and the short answer is: I’m not supposed to! The function defaults to grabbing the <strong>integer</strong> window ID for the current window if one isn’t provided. What’s up with that?! After verifying that it is in fact using an integer the whole time, I opened a <a href="https://github.com/folke/edgy.nvim/pull/110" rel="nofollow">PR to fix the type annotation for the window parameter</a>. Anyway long story short, the integer window ID works fine, so until that PR gets merged I’m going to just ignore the warning. This is the magic of open source: if you find something wrong, you can make the change and submit a PR to fix it!</p> <p>That was a bit of a tangent, but it’s always great to contribute to open source. Anyway, I’ve still got a problem: I don’t know the window ID of my neo-tree panes! At this point I was getting comfortable poking around in the edgy codebase, so I looked for where I can find the <code>Title</code> value I set for each of my views. I found a function to select a window, and in the code to open a selector UI it has <a href="https://github.com/folke/edgy.nvim/blob/ebb77fde6f5cb2745431c6c0fe57024f66471728/lua/edgy/editor.lua#L130" rel="nofollow">the following line</a>:</p> <!><!> <p>Perfect! That is <em>exactly</em> what I need. It’s all coming together:</p> <ol><li>Channel my inner winner and call <code>nvim_list_wins()</code></li> <li>With each window ID, get the corresponding edgy <code>Window</code> object</li> <li>Check if the value from <code>Window.view.get_title()</code> matches the name of the window I want</li> <li>If it does, set my focus to that window</li></ol> <p>With only one major bump along the road, this seems to be going pretty smoothly. I quickly coded up a helper function for this since I want to use it in 4 separate keybindings: One to open the edge bar, and one for each of the three views within that edge bar. Here’s what that looks like:</p> <!><!> <p>All that’s left is to call this sucker in my keybinds and I’m ready to roll! For brevity, here’s just the keybind to open the edge bar on the right:</p> <!><!> <p>Now that everything is in place, I was ready to feel like a wizard, conjuring up trees and having my cursor arrive precisely where it is meant to. I ran <code>:source %</code> to reload my new edgy config and try it out:</p> <video autoplay loop playsinline=""><source media="(prefers-color-scheme: light)" src="https://img.allandeutsch.com/allandeutschcom-note-images/100ee2eba506f0ecd22e5398f7bca788.mp4" type="video/mp4"><source media="(prefers-color-scheme: dark)" src="https://img.allandeutsch.com/allandeutschcom-note-images/2d1c36903f3468185b8652a42566a55c.mp4" type="video/mp4"><track kind="captions" src="" srclang="en" label="A neovim window is displayed and a sidebar containing a filetree, buffer list, and git modified files tree view is toggled open and closed."></video> <p>Uh oh. It’s still behaving exactly the same, focusing the Git view in the bottom right corner. Once the pane is opened, my keybinds to jump to a specific named view work correctly. What could cause that? My first thought is that either edgy or neo-tree opens asynchronously to avoid blocking the main thread. I’m by no means an expert in Lua, so I have no idea how the parallelism engine works for the language.</p> <p>After a bit of research, I found <a href="https://www.youtube.com/watch?v=GMS0JvS7W1Y" rel="nofollow">this video by TJ DeVries about the vim scheduler</a>. I found it very interesting, but the TL;DR: here is that neovim lua code has an event loop similar to <em>JavaScript</em>. To queue a function to be executed once the runtime finishes executing everything on the event loop, call <code>vim.schedule()</code> and pass it the function you want it to run. Not too bad! With this change, the function run on keybind looks something like this:</p> <!><!> <p>Another round of <code>:source %</code> to reload the config, and this time it works how I want! I love that I have so much control over the behavior of my editor in Neovim. You can check out the final <a href="https://github.com/Masstronaut/nvim-config/blob/main/lua/plugins/edgy.lua" rel="nofollow">edgy.lua config on my GitHub</a>.</p>',3);function H(B,f){const g=b(f,["children","$$slots","$$events","$$legacy"]);I(B,_(()=>g,D,{children:(u,x)=>{var i=F(),n=s(w(i),8);a(n,()=>`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" lua filename="~/.config/nvim/lua/plugins/edgy.nvim"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">return</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123;</span></span>
<span class="line"><span style="color:#B5695977;--shiki-dark:#C98A7D77">	"</span><span style="color:#B56959;--shiki-dark:#C98A7D">folke/edgy.nvim</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	event</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">VeryLazy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">	init</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> function</span><span style="color:#999999;--shiki-dark:#666666">()</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">		vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">opt</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">laststatus</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#2F798A;--shiki-dark:#4C9A91"> 3</span><span style="color:#A0ADA0;--shiki-dark:#758575DD"> -- show a single status line at the bottom</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">		vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">opt</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">splitkeep</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">screen</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">" </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- prevents jumping when open/close sidebars</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	end</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	opts</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">		right</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">	&#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				title</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Files</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				ft</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">				filter</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> function</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">buf</span><span style="color:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">					return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">b</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">[</span><span style="color:#B07D48;--shiki-dark:#BD976A">buf</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">].</span><span style="color:#59873A;--shiki-dark:#80A665">neo_tree_source</span><span style="color:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">filesystem</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">				end</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				open</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Neotree filesystem</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				size</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123; </span><span style="color:#B07D48;--shiki-dark:#BD976A">height</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#2F798A;--shiki-dark:#4C9A91"> 0.5</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#125;, </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- 1/2 window height</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				pinned</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> true</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">			&#125;,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">			&#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				title</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Buffers</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				ft</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">				filter</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> function</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">buf</span><span style="color:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">					return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">b</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">[</span><span style="color:#B07D48;--shiki-dark:#BD976A">buf</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">].</span><span style="color:#59873A;--shiki-dark:#80A665">neo_tree_source</span><span style="color:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">buffers</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">				end</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				pinned</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> true</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				open</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Neotree position=top buffers</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				size</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123; </span><span style="color:#B07D48;--shiki-dark:#BD976A">height</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#2F798A;--shiki-dark:#4C9A91"> 0.25</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#125;,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">			&#125;,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">			&#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				title</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Git</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				ft</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">				filter</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> function</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">buf</span><span style="color:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">					return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">b</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">[</span><span style="color:#B07D48;--shiki-dark:#BD976A">buf</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">].</span><span style="color:#59873A;--shiki-dark:#80A665">neo_tree_source</span><span style="color:#AB5959;--shiki-dark:#CB7676"> ==</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">git_status</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">				end</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				pinned</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> true</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				open</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B5695977;--shiki-dark:#C98A7D77"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">Neotree position=left git_status</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">				size</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123; </span><span style="color:#B07D48;--shiki-dark:#BD976A">height</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#2F798A;--shiki-dark:#4C9A91"> 0.25</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#125;,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">			&#125;,</span></span>
<span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">			-- any other neo-tree windows should also be here</span></span>
<span class="line"><span style="color:#B5695977;--shiki-dark:#C98A7D77">			"</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">		&#125;</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">	&#125;</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">&#125;</span></span></code></pre>`);var e=s(n);a(e,()=>`<pre class="code-copy-target hidden">return &#123;
	"folke/edgy.nvim",
	event = "VeryLazy",
	init = function()
		vim.opt.laststatus = 3 -- show a single status line at the bottom
		vim.opt.splitkeep = "screen" -- prevents jumping when open/close sidebars
	end,
	opts = &#123;
		right =	&#123;
				title = "Files",
				ft = "neo-tree",
				filter = function(buf)
					return vim.b[buf].neo_tree_source == "filesystem"
				end,
				open = "Neotree filesystem",
				size = &#123; height = 0.5 &#125;, -- 1/2 window height
				pinned = true,
			&#125;,
			&#123;
				title = "Buffers",
				ft = "neo-tree",
				filter = function(buf)
					return vim.b[buf].neo_tree_source == "buffers"
				end,
				pinned = true,
				open = "Neotree position=top buffers",
				size = &#123; height = 0.25 &#125;,
			&#125;,
			&#123;
				title = "Git",
				ft = "neo-tree",
				filter = function(buf)
					return vim.b[buf].neo_tree_source == "git_status"
				end,
				pinned = true,
				open = "Neotree position=left git_status",
				size = &#123; height = 0.25 &#125;,
			&#125;,
			-- any other neo-tree windows should also be here
			"neo-tree",
		&#125;
	&#125;
&#125;</pre>`);var o=s(e,8);a(o,()=>'<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">api</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">nvim_set_current_win</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">window_id</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span></code></pre>');var l=s(o);a(l,()=>'<pre class="code-copy-target hidden">vim.api.nvim_set_current_win(window_id)</pre>');var r=s(l,4);a(r,()=>`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- integer[]</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">local</span><span style="color:#B07D48;--shiki-dark:#BD976A"> window_ids</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B07D48;--shiki-dark:#BD976A"> vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">api</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">nvim_list_wins</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">()</span></span></code></pre>`);var t=s(r);a(t,()=>`<pre class="code-copy-target hidden">-- integer[]
local window_ids = vim.api.nvim_list_wins()</pre>`);var p=s(t,16);a(p,()=>'<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">local</span><span style="color:#B07D48;--shiki-dark:#BD976A"> title</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B07D48;--shiki-dark:#BD976A"> w</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">view</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">get_title</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">()</span></span></code></pre>');var k=s(p);a(k,()=>'<pre class="code-copy-target hidden">local title = w.view.get_title()</pre>');var c=s(k,8);a(c,()=>`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" lua filename="~/.config/nvim/lua/plugins/edgy.lua"><code><span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">---</span><span style="color:#AB5959;--shiki-dark:#CB7676">@param</span><span style="color:#59873A;--shiki-dark:#80A665"> title</span><span style="color:#998418;--shiki-dark:#B8A965"> string</span><span style="color:#AB5959;--shiki-dark:#CB7676">: </span><span style="color:#998418;--shiki-dark:#B8A965">the edgy title of the window to focus</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">local</span><span style="color:#59873A;--shiki-dark:#80A665"> focus_window</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#1E754F;--shiki-dark:#4D9375"> function</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">title</span><span style="color:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	local</span><span style="color:#B07D48;--shiki-dark:#BD976A"> all_win_ids</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B07D48;--shiki-dark:#BD976A"> vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">api</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">nvim_list_wins</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">()</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	local</span><span style="color:#B07D48;--shiki-dark:#BD976A"> edgy</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#998418;--shiki-dark:#B8A965"> require</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">edgy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">) </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- owns the window titles</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	for</span><span style="color:#B07D48;--shiki-dark:#BD976A"> _</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">, </span><span style="color:#B07D48;--shiki-dark:#BD976A">win_id</span><span style="color:#1E754F;--shiki-dark:#4D9375"> in</span><span style="color:#998418;--shiki-dark:#B8A965"> ipairs</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">all_win_ids</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">) </span><span style="color:#1E754F;--shiki-dark:#4D9375">do</span><span style="color:#A0ADA0;--shiki-dark:#758575DD"> -- loop over all windows</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">		local</span><span style="color:#B07D48;--shiki-dark:#BD976A"> win</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#B07D48;--shiki-dark:#BD976A"> edgy</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">get_win</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">win_id</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">) </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- edgy window.view stores the title</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">		if</span><span style="color:#B07D48;--shiki-dark:#BD976A"> win</span><span style="color:#AB5959;--shiki-dark:#CB7676"> and</span><span style="color:#B07D48;--shiki-dark:#BD976A"> win</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">view</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">get_title</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">() </span><span style="color:#AB5959;--shiki-dark:#CB7676">==</span><span style="color:#B07D48;--shiki-dark:#BD976A"> title</span><span style="color:#1E754F;--shiki-dark:#4D9375"> then</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">			vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#59873A;--shiki-dark:#80A665">api</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">nvim_set_current_win</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">win_id</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">		end</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	end</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">end</span></span></code></pre>`);var d=s(c);a(d,()=>`<pre class="code-copy-target hidden">---@param title string: the edgy title of the window to focus
local focus_window = function(title)
	local all_win_ids = vim.api.nvim_list_wins()
	local edgy = require("edgy") -- owns the window titles
	for _, win_id in ipairs(all_win_ids) do -- loop over all windows
		local win = edgy.get_win(win_id) -- edgy window.view stores the title
		if win and win.view.get_title() == title then
			vim.api.nvim_set_current_win(win_id)
		end
	end
end</pre>`);var h=s(d,4);a(h,()=>`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" lua filename="~/.config/nvim/lua/plugins/edgy.lua"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">return</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123;</span></span>
<span class="line"><span style="color:#B5695977;--shiki-dark:#C98A7D77">	"</span><span style="color:#B56959;--shiki-dark:#C98A7D">folke/edgy.nvim</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">,</span></span>
<span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">	-- other configs...</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	keys</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123;</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">		&#123;</span></span>
<span class="line"><span style="color:#B5695977;--shiki-dark:#C98A7D77">			"</span><span style="color:#B56959;--shiki-dark:#C98A7D">&#x3C;leader>pl</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">, </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- the keybinding</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">			function</span><span style="color:#999999;--shiki-dark:#666666">()</span><span style="color:#A0ADA0;--shiki-dark:#758575DD"> -- what happens when I press it</span></span>
<span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">				-- ensure neo-tree is loaded</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">				require</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">lazy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">).</span><span style="color:#998418;--shiki-dark:#B8A965">load</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(&#123;</span><span style="color:#B07D48;--shiki-dark:#BD976A">plugins</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123;</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree.nvim</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">&#125;&#125;)</span></span>
<span class="line"><span style="color:#A0ADA0;--shiki-dark:#758575DD">				-- Open the right edge bar</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">				require</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">edgy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">).</span><span style="color:#998418;--shiki-dark:#B8A965">toggle</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">right</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">				focus_window</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">Files</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">) </span><span style="color:#A0ADA0;--shiki-dark:#758575DD">-- The magic sauce!</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">			end</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">		&#125;</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">	&#125;</span></span>
<span class="line"><span style="color:#393A34;--shiki-dark:#DBD7CAEE">&#125;</span></span></code></pre>`);var y=s(h);a(y,()=>`<pre class="code-copy-target hidden">return &#123;
	"folke/edgy.nvim",
	-- other configs...
	keys = &#123;
		&#123;
			"&lt;leader&gt;pl", -- the keybinding
			function() -- what happens when I press it
				-- ensure neo-tree is loaded
				require("lazy").load(&#123;plugins = &#123;"neo-tree.nvim"&#125;&#125;)
				-- Open the right edge bar
				require("edgy").toggle("right")
				focus_window("Files") -- The magic sauce!
			end
		&#125;
	&#125;
&#125;</pre>`);var A=s(y,10);a(A,()=>`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">function</span><span style="color:#999999;--shiki-dark:#666666">()</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">	require</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">lazy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">).</span><span style="color:#998418;--shiki-dark:#B8A965">load</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(&#123; </span><span style="color:#B07D48;--shiki-dark:#BD976A">plugins</span><span style="color:#AB5959;--shiki-dark:#CB7676"> =</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> &#123; </span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">neo-tree.nvim</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">" </span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">&#125; &#125;)</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">	require</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">edgy</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">).</span><span style="color:#998418;--shiki-dark:#B8A965">toggle</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">right</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	vim</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">.</span><span style="color:#998418;--shiki-dark:#B8A965">schedule</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">( </span><span style="color:#1E754F;--shiki-dark:#4D9375">function</span><span style="color:#999999;--shiki-dark:#666666">()</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">		focus_window</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">(</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">Files</span><span style="color:#B5695977;--shiki-dark:#C98A7D77">"</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	end</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">)</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">end</span></span></code></pre>`);var E=s(A);a(E,()=>`<pre class="code-copy-target hidden">function()
	require("lazy").load(&#123; plugins = &#123; "neo-tree.nvim" &#125; &#125;)
	require("edgy").toggle("right")
	vim.schedule( function()
		focus_window("Files")
	end)
end</pre>`),v(2),C(u,i)},$$slots:{default:!0}}))}export{H as default,D as metadata};
