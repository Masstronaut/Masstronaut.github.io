import"./Bzak7iHL.js";import"./BjZVtCDr.js";import{f as a,s as i,a as v,Y as $,b as r,Z as s}from"./BJtFNpt7.js";import{l as w,s as k}from"./IBUSOwbe.js";import{M as b}from"./ClEsA1ki.js";import{H as o}from"./DtBtbrGX.js";const d={title:"The learning process",description:"A repeating cycle of receiving input, processing it to create output, evaluating that output, and evaluating results to improve future processing.",slug:"notes/learning-process",publish:!0,lastmod:"2021-07-27T00:00:00.000Z",date:"2021-07-27T00:00:00.000Z",aliases:["The learning process"],tags:["status/evergreen","topic/learning","taxonomy/idea"],readTime:2,internalLinks:["/notes/world-recursive"],flashcards:[]},{title:z,description:B,slug:E,publish:H,lastmod:M,date:N,aliases:R,tags:q,readTime:F,internalLinks:S,flashcards:U}=d;var _=a("<em>Agile sprint</em>s",1),T=a("Feed-forward <em>Back-propagation</em> <em>Neural networks</em>",1),y=a('<p>Iâ€™ve observed that the learning process has 4 generalized steps:</p> <ol><li>Inputs are received and processed.</li> <li>The input processing system runs to produce an output.</li> <li>The output is evaluated.</li> <li>Evaluation results are incorporated back into the input processing system.</li></ol> <!> <p>The learning process seems to be common in domains rich with knowledge workers. Tech being a prominent example, has two extremely popular implementations of the learning process:</p> <!> <ol><li>During sprint planning, feature requests and bugs are received as inputs. These inputs get processed into <em>User stories</em> which have valuable metadata like estimated completion time and priority. The team then decides which tasks will produce the best output at the end of the sprint.</li> <li>During the sprint, the team does the work outlined in the user stories they selected in sprint planning (this is the input being processed to produce an output).</li> <li>At the sprint review, delivered work is evaluated against the <em>Definition of done</em> from the committed user stories.</li> <li>At the sprint retrospectives, the team uses the insights of how they did during the current sprint to figure out ways of refining their process for the next sprint.</li></ol> <!> <ol><li>Inputs values are provided to the input neurons</li> <li>The inputs are fed forward through the neural network to produce values at each output node</li> <li>The output is scored.</li> <li>Results from scoring the output are sent back through the neural network so connection weights can be tweaked to produce better results using Back-propagation.</li></ol> <p>Related: <a href="/notes/world-recursive">The world is recursive</a>.</p>',1);function X(h,c){const m=w(c,["children","$$slots","$$events","$$legacy"]);b(h,k(()=>m,()=>d,{children:(g,x)=>{var n=y(),l=i(v(n),4);o(l,{id:"examples-of-the-learning-process",children:(e,u)=>{s();var t=$("Examples of the learning process");r(e,t)},$$slots:{default:!0}});var p=i(l,4);o(p,{id:"agile-sprints",children:(e,u)=>{var t=_();s(),r(e,t)},$$slots:{default:!0}});var f=i(p,4);o(f,{id:"feed-forward-back-propagation-neural-networks",children:(e,u)=>{s();var t=T();s(3),r(e,t)},$$slots:{default:!0}}),s(4),r(g,n)},$$slots:{default:!0}}))}export{X as default,d as metadata};
