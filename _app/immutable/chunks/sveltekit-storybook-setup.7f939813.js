import{s as bs,C as Me,a3 as is,f as p,a as n,a4 as F,g as c,u as r,c as a,a5 as h,j as ks,i as t,d as l,A as ds}from"./scheduler.5beeadad.js";import{S as Ts,i as gs,b as Ae,d as Ee,m as $e,a as je,t as qe,e as Pe}from"./index.bfd99307.js";import{g as Cs,a as ps}from"./spread.8a54911c.js";import{M as Ss}from"./MDSveXNoteLayout.2a006cba.js";import{T as cs}from"./Table.8240123f.js";function xs(m){let o,f="<tr><th>Option</th> <th>Selection</th></tr>",y,d,v="<tr><td>Which Svelte app template?</td> <td>Skeleton project</td></tr> <tr><td>Add type checking?</td> <td>TypeScript</td></tr> <tr><td>Add ESLint for code linting?</td> <td>Yes</td></tr> <tr><td>Add Prettier for code formatting?</td> <td>Yes</td></tr> <tr><td>Add Playwright for browser testing?</td> <td>No</td></tr> <tr><td>Add Vitest for unit testing?</td> <td>Yes</td></tr>";return{c(){o=p("thead"),o.innerHTML=f,y=n(),d=p("tbody"),d.innerHTML=v},l(i){o=c(i,"THEAD",{["data-svelte-h"]:!0}),r(o)!=="svelte-w5vgos"&&(o.innerHTML=f),y=a(i),d=c(i,"TBODY",{["data-svelte-h"]:!0}),r(d)!=="svelte-1etve8r"&&(d.innerHTML=v)},m(i,u){t(i,o,u),t(i,y,u),t(i,d,u)},p:ds,d(i){i&&(l(o),l(y),l(d))}}}function Ls(m){let o,f="<tr><th>Option</th> <th>Selection</th></tr>",y,d,v="<tr><td>Do you want to run the ‘eslintPlugin’ fix on your project?</td> <td>Yes</td></tr>";return{c(){o=p("thead"),o.innerHTML=f,y=n(),d=p("tbody"),d.innerHTML=v},l(i){o=c(i,"THEAD",{["data-svelte-h"]:!0}),r(o)!=="svelte-w5vgos"&&(o.innerHTML=f),y=a(i),d=c(i,"TBODY",{["data-svelte-h"]:!0}),r(d)!=="svelte-1nmx80b"&&(d.innerHTML=v)},m(i,u){t(i,o,u),t(i,y,u),t(i,d,u)},p:ds,d(i){i&&(l(o),l(y),l(d))}}}function Hs(m){let o,f="This will walk you through the steps to set up a new <em>SvelteKit</em> project with <em>StorybookJS</em>. It will also configure Storybook to use <em>ViteJS</em>. Using Vite gets the local storybook server up and running around ~50x faster.",y,d,v="<p>Note: I’ve opted to use TypeScript in this guide, but it works just as well for JavaScript. As of April 2022, Storybook supports svelte components implemented in TS, but does <strong>not</strong> support <em>stories</em> written in TypeScript yet.</p>",i,u,Je="Initialize a <em>SvelteKit</em> project:",ae,I,vs=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #24292F">npm init svelte@next my-sveltekit-app</span></div></code></div></pre>`,V,k,Ke="Confirm that it can install <code>create-svelte@next</code> then continue to the SvelteKit config options. My preferred config is as follows:",ie,_,pe,T,De="With <em>SvelteKit</em> configured, we can start setting up <em>StorybookJS</em>:",ce,Y,ys=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #0550AE">cd</span><span style="color: #24292F"> my-sveltekit-app</span></div><div class='line'><span style="color: #24292F">npx sb init --builder @storybook/builder-vite</span></div></code></div></pre>`,B,g,Oe="The automated <em>StorybookJS</em> configuration tool will run and set things up for a Svelte project. It’ll ask you if you want to set up the storybook linter plugin:",re,w,de,C,ze="Once the setup is done, there are a couple manual config steps we need to go through.",ve,S,Ie="First we need to tell Storybook to use <em>CommonJS</em>. Create the file <code>.storybook/package.json</code> and add the following to it:",ye,N,us=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" json="true"><div class="language-id">json</div><div class='code-container'><code><div class='line'><span style="color: #6E7781">// .storybook/package.json</span></div><div class='line'><span style="color: #24292F">&#123;</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #0550AE">"type"</span><span style="color: #24292F">: </span><span style="color: #0A3069">"commonjs"</span></div><div class='line'><span style="color: #24292F">&#125;</span></div></code></div></pre>`,U,x,Ve="Then we need to remove Storybook’s preprocessing config and tell <em>ViteJS</em> how to find and preprocess our svelte files:",ue,L,Ye="<li>Remove <code>&quot;preprocess&quot;: require( &quot;../svelte.config.js&quot; ).preprocess</code></li> <li>Import the svelte preprocessor: <code>const preprocess = require(&#39;svelte-preprocess&#39;);</code></li> <li>Import the <code>path</code> package to help with include paths: <code>const path = require(&#39;path&#39;);</code></li> <li>Set the <em>ViteJS</em> config to use the svelte preprocessor and include paths (see the <code>async viteFinal(config, {configType}) {...}</code> below)</li>",fe,H,Be="The final <code>.storybook/main.js</code> file should look like this:",me,Q,fs=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #6E7781">// .storybook/main.js</span></div><div class='line'><span style="color: #CF222E">const</span><span style="color: #24292F"> </span><span style="color: #0550AE">preprocess</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #0550AE">require</span><span style="color: #24292F">(</span><span style="color: #0A3069">'svelte-preprocess'</span><span style="color: #24292F">);</span></div><div class='line'><span style="color: #CF222E">const</span><span style="color: #24292F"> </span><span style="color: #0550AE">path</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #0550AE">require</span><span style="color: #24292F">(</span><span style="color: #0A3069">'path'</span><span style="color: #24292F">);</span></div><div class='line'><span style="color: #0550AE">module</span><span style="color: #24292F">.</span><span style="color: #0550AE">exports</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> &#123;</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #0A3069">"stories"</span><span style="color: #24292F">: [</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"../src/**/*.stories.mdx"</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"../src/**/*.stories.@(js|jsx|ts|tsx|svelte)"</span></div><div class='line'><span style="color: #24292F">  ],</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #0A3069">"addons"</span><span style="color: #24292F">: [</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"@storybook/addon-links"</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"@storybook/addon-essentials"</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"@storybook/addon-svelte-csf"</span></div><div class='line'><span style="color: #24292F">  ],</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #0A3069">"framework"</span><span style="color: #24292F">: </span><span style="color: #0A3069">"@storybook/svelte"</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #0A3069">"core"</span><span style="color: #24292F">: &#123;</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #0A3069">"builder"</span><span style="color: #24292F">: </span><span style="color: #0A3069">"@storybook/builder-vite"</span></div><div class='line'><span style="color: #24292F">  &#125;,</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #CF222E">async</span><span style="color: #24292F"> </span><span style="color: #8250DF">viteFinal</span><span style="color: #24292F">(</span><span style="color: #953800">config</span><span style="color: #24292F">, &#123; </span><span style="color: #953800">configType</span><span style="color: #24292F"> &#125;) &#123;</span></div><div class='line'><span style="color: #24292F">    config.preprocess </span><span style="color: #CF222E">=</span><span style="color: #24292F"> </span><span style="color: #8250DF">preprocess</span><span style="color: #24292F">(&#123;&#125;);</span></div><div class='line'><span style="color: #24292F">    config.resolve.alias </span><span style="color: #CF222E">=</span><span style="color: #24292F"> &#123;</span></div><div class='line'><span style="color: #24292F">	  </span><span style="color: #6E7781">// alias: path</span></div><div class='line'><span style="color: #24292F">	  $components: path.</span><span style="color: #8250DF">resolve</span><span style="color: #24292F">(</span><span style="color: #0A3069">'./src/components'</span><span style="color: #24292F">),</span></div><div class='line'><span style="color: #24292F">	  $routes: path.</span><span style="color: #8250DF">resolve</span><span style="color: #24292F">(</span><span style="color: #0A3069">'./src/routes'</span><span style="color: #24292F">),</span></div><div class='line'><span style="color: #24292F">	  $lib: path.</span><span style="color: #8250DF">resolve</span><span style="color: #24292F">(</span><span style="color: #0A3069">'./src/lib'</span><span style="color: #24292F">),</span></div><div class='line'><span style="color: #24292F">	  </span><span style="color: #6E7781">// The $styles alias is used to setup tailwindcss </span></div><div class='line'><span style="color: #24292F">	  $styles: path.</span><span style="color: #8250DF">resolve</span><span style="color: #24292F">(</span><span style="color: #0A3069">'./src/styles'</span><span style="color: #24292F">),</span></div><div class='line'><span style="color: #24292F">	&#125;;</span></div><div class='line'><span style="color: #24292F">    </span><span style="color: #CF222E">return</span><span style="color: #24292F"> config;</span></div><div class='line'><span style="color: #24292F">  &#125;,</span></div><div class='line'><span style="color: #24292F">&#125;</span></div></code></div></pre>`,R,M,Ne="<p>Note: if you have different include path aliases, you’ll want to make sure that the ones in <code>.storybook/main.js</code> match your <code>svelte.config.js</code> aliases</p>",Fe,A,Ue="Voila! You should be all set.",he,b,Qe='<a aria-hidden="true" tabindex="-1" href="#bonus-tailwindcss-support"><span class="icon icon-link"></span></a><a href="#bonus-tailwindcss-support" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Bonus: Tailwindcss support',_e,E,Re="If you <em>also</em> want to use <em>tailwindcss</em> with both <em>SvelteJS</em>/<em>SvelteKit</em> and <em>StorybookJS</em>, that config has a couple of gotchas as well. Here’s the steps to get it up and running.",we,$,Ze='First, install <em>tailwindcss</em> in your <em>SvelteKit</em> project (per <a href="https://tailwindcss.com/docs/guides/sveltekit" rel="nofollow">the official tailwind docs</a>):',be,Z,ms=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" zsh="true"><div class="language-id">zsh</div><div class='code-container'><code><div class='line'><span style="color: #24292F">npm install -D tailwindcss postcss autoprefixer</span></div><div class='line'><span style="color: #24292F">npx tailwindcss init tailwind.config.cjs -p</span></div><div class='line'><span style="color: #24292F">mv postcss.config.js postcss.config.cjs</span></div></code></div></pre>`,W,j,We="Then update the <code>tailwind.config.cjs</code> so it knows where to find your components:",ke,X,Fs=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #6E7781">// tailwind.config.cjs</span></div><div class='line'><span style="color: #6E7781">/** </span><span style="color: #CF222E">@type</span><span style="color: #6E7781"> </span><span style="color: #953800">&#123;import('tailwindcss').Config&#125;</span><span style="color: #6E7781"> */</span></div><div class='line'><span style="color: #0550AE">module</span><span style="color: #24292F">.</span><span style="color: #0550AE">exports</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> &#123;</span></div><div class='line'><span style="color: #24292F">  content: [</span><span style="color: #0A3069">'./src/**/*.&#123;html,js,svelte,ts&#125;'</span><span style="color: #24292F">],</span></div><div class='line'><span style="color: #24292F">  theme: &#123;</span></div><div class='line'><span style="color: #24292F">    extend: &#123;&#125;</span></div><div class='line'><span style="color: #24292F">  &#125;,</span></div><div class='line'><span style="color: #24292F">  plugins: []</span></div><div class='line'><span style="color: #24292F">&#125;;</span></div></code></div></pre>`,G,q,Xe="Create a <code>src/styles/tailwind.css</code> file that sets up <em>tailwindcss</em> for your components:",Te,ee,hs=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" css="true"><div class="language-id">css</div><div class='code-container'><code><div class='line'><span style="color: #CF222E">@tailwind</span><span style="color: #24292F"> base;</span></div><div class='line'><span style="color: #CF222E">@tailwind</span><span style="color: #24292F"> components;</span></div><div class='line'><span style="color: #CF222E">@tailwind</span><span style="color: #24292F"> utilities;</span></div></code></div></pre>`,se,P,Ge="Finally, create a <code>src/routes/__layout.svelte</code> file that includes <em>tailwindcss</em> for your sveltekit project:",ge,te,_s=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" svelte="true"><div class="language-id">svelte</div><div class='code-container'><code><div class='line'><span style="color: #24292F">&lt;</span><span style="color: #116329">script</span><span style="color: #24292F">&gt;</span></div><div class='line'><span style="color: #24292F">  </span><span style="color: #CF222E">import</span><span style="color: #24292F"> </span><span style="color: #0A3069">"$styles/tailwind.css"</span><span style="color: #24292F">;</span></div><div class='line'><span style="color: #24292F">&lt;/</span><span style="color: #116329">script</span><span style="color: #24292F">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #24292F">&lt;</span><span style="color: #CF222E">slot</span><span style="color: #24292F"> /&gt;</span></div></code></div></pre>`,le,J,es="At this point <em>tailwindcss</em> should be working in your <em>SvelteKit</em> project. It won’t be working in the <em>StorybookJS</em> view of your components though; storybook still needs to be configured to use <em>tailwindcss</em>. To do that add the following line to the top of <code>.storybook/preview.js</code>:",Ce,oe,ws=`<pre class="shiki" style="background-color: #ffffff; color: #24292f" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #6E7781">// .storybook/preview.js</span></div><div class='line'><span style="color: #CF222E">import</span><span style="color: #24292F"> </span><span style="color: #0A3069">'$styles/tailwind.css'</span><span style="color: #24292F">;</span></div><div class='line'></div><div class='line'><span style="color: #6E7781">// No need to touch the rest of it, which for me looks like this:</span></div><div class='line'><span style="color: #CF222E">export</span><span style="color: #24292F"> </span><span style="color: #CF222E">const</span><span style="color: #24292F"> </span><span style="color: #0550AE">parameters</span><span style="color: #24292F"> </span><span style="color: #CF222E">=</span><span style="color: #24292F"> &#123;</span></div><div class='line'><span style="color: #24292F">  actions: &#123; argTypesRegex: </span><span style="color: #0A3069">"^on[A-Z].*"</span><span style="color: #24292F"> &#125;,</span></div><div class='line'><span style="color: #24292F">  controls: &#123;</span></div><div class='line'><span style="color: #24292F">    matchers: &#123;</span></div><div class='line'><span style="color: #24292F">      color:</span><span style="color: #0A3069"> /(background</span><span style="color: #CF222E">|</span><span style="color: #0A3069">color)</span><span style="color: #CF222E">$</span><span style="color: #0A3069">/</span><span style="color: #CF222E">i</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">      date:</span><span style="color: #0A3069"> /Date</span><span style="color: #CF222E">$</span><span style="color: #0A3069">/</span><span style="color: #24292F">,</span></div><div class='line'><span style="color: #24292F">    &#125;,</span></div><div class='line'><span style="color: #24292F">  &#125;,</span></div><div class='line'><span style="color: #24292F">&#125;</span></div></code></div></pre>`,ne,K,ss="<p>!Note: the <code>.storybook/main.js</code> file needs to have the alias <code>$styles: path.resolve(&#39;./src/styles&#39;)</code> set in vite’s <code>config.resolve.alias</code> object for the <code>import &#39;$styles/tailwind.css&#39;</code> to work.</p>",Se,D,ts="That’s it! You should have the following correctly set up now:",xe,O,ls="<li><em>SvelteKit</em> using <em>TypeScript</em>, styleable with <em>tailwindcss</em>, all using <em>ViteJS</em></li> <li>A complementary <em>StorybookJS</em> also using <em>ViteJS</em> and <em>tailwindcss</em> for your <em>TypeScript</em> components.</li>",Le,z,os="Sadly as of now (May 2022) your stories still need to be authored in <em>JavaScript</em>.",He;return _=new cs({props:{$$slots:{default:[xs]},$$scope:{ctx:m}}}),w=new cs({props:{$$slots:{default:[Ls]},$$scope:{ctx:m}}}),{c(){o=p("p"),o.innerHTML=f,y=n(),d=p("blockquote"),d.innerHTML=v,i=n(),u=p("p"),u.innerHTML=Je,ae=n(),I=new F(!1),V=n(),k=p("p"),k.innerHTML=Ke,ie=n(),Ae(_.$$.fragment),pe=n(),T=p("p"),T.innerHTML=De,ce=n(),Y=new F(!1),B=n(),g=p("p"),g.innerHTML=Oe,re=n(),Ae(w.$$.fragment),de=n(),C=p("p"),C.textContent=ze,ve=n(),S=p("p"),S.innerHTML=Ie,ye=n(),N=new F(!1),U=n(),x=p("p"),x.innerHTML=Ve,ue=n(),L=p("ol"),L.innerHTML=Ye,fe=n(),H=p("p"),H.innerHTML=Be,me=n(),Q=new F(!1),R=n(),M=p("blockquote"),M.innerHTML=Ne,Fe=n(),A=p("p"),A.textContent=Ue,he=n(),b=p("h2"),b.innerHTML=Qe,_e=n(),E=p("p"),E.innerHTML=Re,we=n(),$=p("p"),$.innerHTML=Ze,be=n(),Z=new F(!1),W=n(),j=p("p"),j.innerHTML=We,ke=n(),X=new F(!1),G=n(),q=p("p"),q.innerHTML=Xe,Te=n(),ee=new F(!1),se=n(),P=p("p"),P.innerHTML=Ge,ge=n(),te=new F(!1),le=n(),J=p("p"),J.innerHTML=es,Ce=n(),oe=new F(!1),ne=n(),K=p("blockquote"),K.innerHTML=ss,Se=n(),D=p("p"),D.textContent=ts,xe=n(),O=p("ul"),O.innerHTML=ls,Le=n(),z=p("p"),z.innerHTML=os,this.h()},l(e){o=c(e,"P",{["data-svelte-h"]:!0}),r(o)!=="svelte-1fqd0a1"&&(o.innerHTML=f),y=a(e),d=c(e,"BLOCKQUOTE",{["data-svelte-h"]:!0}),r(d)!=="svelte-1evrzvi"&&(d.innerHTML=v),i=a(e),u=c(e,"P",{["data-svelte-h"]:!0}),r(u)!=="svelte-1psveak"&&(u.innerHTML=Je),ae=a(e),I=h(e,!1),V=a(e),k=c(e,"P",{["data-svelte-h"]:!0}),r(k)!=="svelte-1cxk78z"&&(k.innerHTML=Ke),ie=a(e),Ee(_.$$.fragment,e),pe=a(e),T=c(e,"P",{["data-svelte-h"]:!0}),r(T)!=="svelte-bmm9ef"&&(T.innerHTML=De),ce=a(e),Y=h(e,!1),B=a(e),g=c(e,"P",{["data-svelte-h"]:!0}),r(g)!=="svelte-1rrjf4j"&&(g.innerHTML=Oe),re=a(e),Ee(w.$$.fragment,e),de=a(e),C=c(e,"P",{["data-svelte-h"]:!0}),r(C)!=="svelte-eja9k9"&&(C.textContent=ze),ve=a(e),S=c(e,"P",{["data-svelte-h"]:!0}),r(S)!=="svelte-7yz4u"&&(S.innerHTML=Ie),ye=a(e),N=h(e,!1),U=a(e),x=c(e,"P",{["data-svelte-h"]:!0}),r(x)!=="svelte-1v6c7v7"&&(x.innerHTML=Ve),ue=a(e),L=c(e,"OL",{["data-svelte-h"]:!0}),r(L)!=="svelte-14e1i9t"&&(L.innerHTML=Ye),fe=a(e),H=c(e,"P",{["data-svelte-h"]:!0}),r(H)!=="svelte-w6nmvq"&&(H.innerHTML=Be),me=a(e),Q=h(e,!1),R=a(e),M=c(e,"BLOCKQUOTE",{["data-svelte-h"]:!0}),r(M)!=="svelte-8iupgo"&&(M.innerHTML=Ne),Fe=a(e),A=c(e,"P",{["data-svelte-h"]:!0}),r(A)!=="svelte-1mbqj2"&&(A.textContent=Ue),he=a(e),b=c(e,"H2",{id:!0,["data-svelte-h"]:!0}),r(b)!=="svelte-1u7hna6"&&(b.innerHTML=Qe),_e=a(e),E=c(e,"P",{["data-svelte-h"]:!0}),r(E)!=="svelte-1lnjsgv"&&(E.innerHTML=Re),we=a(e),$=c(e,"P",{["data-svelte-h"]:!0}),r($)!=="svelte-rqx5iv"&&($.innerHTML=Ze),be=a(e),Z=h(e,!1),W=a(e),j=c(e,"P",{["data-svelte-h"]:!0}),r(j)!=="svelte-180102b"&&(j.innerHTML=We),ke=a(e),X=h(e,!1),G=a(e),q=c(e,"P",{["data-svelte-h"]:!0}),r(q)!=="svelte-4mbbig"&&(q.innerHTML=Xe),Te=a(e),ee=h(e,!1),se=a(e),P=c(e,"P",{["data-svelte-h"]:!0}),r(P)!=="svelte-1dmnoz6"&&(P.innerHTML=Ge),ge=a(e),te=h(e,!1),le=a(e),J=c(e,"P",{["data-svelte-h"]:!0}),r(J)!=="svelte-1dhusc0"&&(J.innerHTML=es),Ce=a(e),oe=h(e,!1),ne=a(e),K=c(e,"BLOCKQUOTE",{["data-svelte-h"]:!0}),r(K)!=="svelte-n40q9u"&&(K.innerHTML=ss),Se=a(e),D=c(e,"P",{["data-svelte-h"]:!0}),r(D)!=="svelte-fqsdpz"&&(D.textContent=ts),xe=a(e),O=c(e,"UL",{["data-svelte-h"]:!0}),r(O)!=="svelte-lw6etz"&&(O.innerHTML=ls),Le=a(e),z=c(e,"P",{["data-svelte-h"]:!0}),r(z)!=="svelte-60xzsf"&&(z.innerHTML=os),this.h()},h(){I.a=V,Y.a=B,N.a=U,Q.a=R,ks(b,"id","bonus-tailwindcss-support"),Z.a=W,X.a=G,ee.a=se,te.a=le,oe.a=ne},m(e,s){t(e,o,s),t(e,y,s),t(e,d,s),t(e,i,s),t(e,u,s),t(e,ae,s),I.m(vs,e,s),t(e,V,s),t(e,k,s),t(e,ie,s),$e(_,e,s),t(e,pe,s),t(e,T,s),t(e,ce,s),Y.m(ys,e,s),t(e,B,s),t(e,g,s),t(e,re,s),$e(w,e,s),t(e,de,s),t(e,C,s),t(e,ve,s),t(e,S,s),t(e,ye,s),N.m(us,e,s),t(e,U,s),t(e,x,s),t(e,ue,s),t(e,L,s),t(e,fe,s),t(e,H,s),t(e,me,s),Q.m(fs,e,s),t(e,R,s),t(e,M,s),t(e,Fe,s),t(e,A,s),t(e,he,s),t(e,b,s),t(e,_e,s),t(e,E,s),t(e,we,s),t(e,$,s),t(e,be,s),Z.m(ms,e,s),t(e,W,s),t(e,j,s),t(e,ke,s),X.m(Fs,e,s),t(e,G,s),t(e,q,s),t(e,Te,s),ee.m(hs,e,s),t(e,se,s),t(e,P,s),t(e,ge,s),te.m(_s,e,s),t(e,le,s),t(e,J,s),t(e,Ce,s),oe.m(ws,e,s),t(e,ne,s),t(e,K,s),t(e,Se,s),t(e,D,s),t(e,xe,s),t(e,O,s),t(e,Le,s),t(e,z,s),He=!0},p(e,s){const ns={};s&2&&(ns.$$scope={dirty:s,ctx:e}),_.$set(ns);const as={};s&2&&(as.$$scope={dirty:s,ctx:e}),w.$set(as)},i(e){He||(je(_.$$.fragment,e),je(w.$$.fragment,e),He=!0)},o(e){qe(_.$$.fragment,e),qe(w.$$.fragment,e),He=!1},d(e){e&&(l(o),l(y),l(d),l(i),l(u),l(ae),I.d(),l(V),l(k),l(ie),l(pe),l(T),l(ce),Y.d(),l(B),l(g),l(re),l(de),l(C),l(ve),l(S),l(ye),N.d(),l(U),l(x),l(ue),l(L),l(fe),l(H),l(me),Q.d(),l(R),l(M),l(Fe),l(A),l(he),l(b),l(_e),l(E),l(we),l($),l(be),Z.d(),l(W),l(j),l(ke),X.d(),l(G),l(q),l(Te),ee.d(),l(se),l(P),l(ge),te.d(),l(le),l(J),l(Ce),oe.d(),l(ne),l(K),l(Se),l(D),l(xe),l(O),l(Le),l(z)),Pe(_,e),Pe(w,e)}}}function Ms(m){let o,f;const y=[m[0],rs];let d={$$slots:{default:[Hs]},$$scope:{ctx:m}};for(let v=0;v<y.length;v+=1)d=Me(d,y[v]);return o=new Ss({props:d}),{c(){Ae(o.$$.fragment)},l(v){Ee(o.$$.fragment,v)},m(v,i){$e(o,v,i),f=!0},p(v,[i]){const u=i&1?Cs(y,[i&1&&ps(v[0]),i&0&&ps(rs)]):{};i&2&&(u.$$scope={dirty:i,ctx:v}),o.$set(u)},i(v){f||(je(o.$$.fragment,v),f=!0)},o(v){qe(o.$$.fragment,v),f=!1},d(v){Pe(o,v)}}}const rs={title:"Setting up a SvelteKit project with Storybook",description:"Setting up Storybook on a SvelteKit project doesn't work out of the box using the config tool. This guide walks you through a few extra steps needed to get SvelteKit and Storybook running.",slug:"sveltekit-storybook-setup",publish:!0,lastmod:"2022-04-19T00:00:00.000Z",date:"2022-04-19T00:00:00.000Z",aliases:["Set up SvelteKit with Storybook","Sveltekit Storybook setup"],tags:["status/seedling","topic/webdev","taxonomy/reference"],timeToRead:3,internalLinks:[],flashcards:[]};function As(m,o,f){return m.$$set=y=>{f(0,o=Me(Me({},o),is(y)))},o=is(o),[o]}class Js extends Ts{constructor(o){super(),gs(this,o,As,Ms,bs,{})}}export{Js as default,rs as metadata};
