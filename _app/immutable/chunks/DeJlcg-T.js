import{t as n,a as o}from"./Sv_TBA-2.js";import"./BaJv1Ckm.js";import{a5 as l}from"./BOCtfefK.js";import{l as d,s as p}from"./B8ys1oD7.js";import{M as h}from"./Caavvd2i.js";const e={title:"The world is recursive",description:"The same things happen across domains and contexts all over the world. Very little is unique or novel.",slug:"notes/world-recursive",publish:!0,lastmod:"2021-04-14T00:00:00.000Z",date:"2021-04-14T00:00:00.000Z",aliases:["The world is recursive"],tags:["status/seedling","taxonomy/idea"],readTime:1,internalLinks:["/notes/learning-process"],flashcards:[]},{title:w,description:$,slug:x,publish:T,lastmod:_,date:b,aliases:k,tags:L,readTime:I,internalLinks:M,flashcards:q}=e;var m=n('<p>This is an idea <em>Louis</em> shared with me which I have start noticed frequently. It’s similar @RayDalio’s idea that situations are common and we should therefore develop Principles that help us handle these situations.</p> <p>A similar notion (also from <em>Louis</em>) is that things rhyme but don’t repeat. The meaning is that many situations sound similar, but aren’t exactly the same. Identifying the rhyme makes it easier to effectively navigate these situations.</p> <h2 id="real-world-examples"><a aria-hidden="true" tabindex="-1" href="#real-world-examples"><span class="icon icon-link"></span></a><a href="#real-world-examples" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Real-world examples</h2> <p>My daily journal practice splits my life into a series of 1-day Agile sprints, which are in turn a specific implementation of <a href="/notes/learning-process">The learning process</a>.</p>',1);function A(a,s){const t=d(s,["children","$$slots","$$events","$$legacy"]);h(a,p(()=>t,e,{children:(i,c)=>{var r=m();l(6),o(i,r)},$$slots:{default:!0}}))}export{A as default,e as metadata};
