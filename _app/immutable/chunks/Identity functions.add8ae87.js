import{s as ua,C as Is,a5 as $s,f as r,a as n,I as h,e as c,g as e,u as t,c as p,K as d,j as Ls,i as o,A as ga,d as l}from"./scheduler.7131e7f1.js";import{S as wa,i as Ca,b as va,d as ma,m as fa,a as Ea,t as ba,e as Fa}from"./index.9e889c2d.js";import{g as Ra,a as sa}from"./spread.8a54911c.js";import{M as Ta}from"./MDSveXNoteLayout.75224a60.js";function xa(K){let i,u="Identity functions are a tool to improve type information. They take the form of a function that provides TypeScript with extra type information and typically have a return value that is identical to argument passed to them. Typically identity functions are used to either provide a library’s users with better type information, or for a library to get better type information from a user. In both cases, the goal seems to be improving ease of use and developer experience.",B,A,k="Libraries with many configuration options commonly use an identity function to make it easier for users to configure them. This is typically done by exporting a function with a name like <code>defineConfig()</code>. It will take a parameter typed identically to the library’s configuration object. Since this tells the IDE what values exist on the object, it can display those options to the users. I much prefer this in-editor experience to tabbing back and forth between my code and the docs. Some tools I use that take this approach are:",y,D,Hs='<li><a href="https://typescript-eslint.io/packages/typescript-eslint#config" rel="nofollow">typescript-eslint</a></li> <li><a href="https://vitejs.dev/config/#config-intellisense" rel="nofollow">vite’s defineConfig</a></li>',As,v,Ks="For example, compare the intellisense help with and without Vite’s <code>defineConfig()</code> function:",Bs,Q,oa=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash filename="vite.config.ts" data-tsplay="https://typescriptlang.org/play/#code/JYWwDg9gTgLgBAbzgEwKYDNgDtUGEJaYDmcAvnOlBCHAOQBuwMqtAUOwPQdwACANhCIAuFBmzYSAQyxwIAIwBWqAMbws0EJL58AnnCKoYAZzjq42ZtuBHUWG3AAWqPmHbKCR+O8LAiARjgAXkQ4MD4AVyJsIxEAbQBdUlYuOFS09IzUgD0AH3Zk7n5BEXCjCThpczQsGCY9dHCsVWACUPDjCu04GCc4b2JZMFqPcxke1DgASQARAFE3Dy8CYgAmINFMHHwfIgAKJDDI6LjEgEoCzMur69z8-KA"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">import</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> defineConfig</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">config</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">UserConfig</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> UserConfig</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">+</span><span style="color:#2F798A;--shiki-dark:#4C9A91">3</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> overloads</span><span style="color:#999999;--shiki-dark:#666666">)</span></code><div class="twoslash-popup-docs">Type helper to make it easier to use vite.config.ts
accepts a direct 
&#123;@link 
UserConfig
&#125;
 object, or a function that returns it.
The function receives a 
&#123;@link 
ConfigEnv
&#125;
 object that exposes two properties:
&#96;command&#96; (either &#96;'build'&#96; or &#96;'serve'&#96;), and &#96;mode&#96;.</div></span>defineConfig</span></span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span><span style="color:#1E754F;--shiki-dark:#4D9375"> from</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> '</span><span style="color:#B56959;--shiki-dark:#C98A7D">vite</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>defining an object normally gets no intellisense help</div><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">config1</span><span style="color:#999999;--shiki-dark:#666666">: &#123;</span><br><span style="color:#B07D48;--shiki-dark:#BD976A">    plugins</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">never</span><span style="color:#999999;--shiki-dark:#666666">[];</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>config1</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123; </span><span style="color:#998418;--shiki-dark:#B8A965"><span>p<span class="twoslash-completion-cursor"><ul class="twoslash-completion-list"><li><span class="twoslash-completions-icon completions-keyword"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ackage</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">arent</span></span></li><li><span class="twoslash-completions-icon completions-function"><svg viewBox="0 0 32 32"><path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473"></path><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9m0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"></path><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">arseFloat</span></span></li><li><span class="twoslash-completions-icon completions-function"><svg viewBox="0 0 32 32"><path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473"></path><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9m0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"></path><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">arseInt</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">erformance</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ersonalbar</span></span></li><li><span class="twoslash-completions-icon completions-function"><svg viewBox="0 0 32 32"><path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473"></path><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9m0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"></path><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ostMessage</span></span></li><li><span class="twoslash-completions-icon completions-function"><svg viewBox="0 0 32 32"><path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473"></path><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9m0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"></path><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">rint</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">rocess</span></span></li><li><span class="twoslash-completions-icon completions-function"><svg viewBox="0 0 32 32"><path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473"></path><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9m0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"></path><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">rompt</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span class="deprecated"><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ageXOffset</span></span></li><li><span class="twoslash-completions-icon completions-var"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span class="deprecated"><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ageYOffset</span></span></li></ul></span></span></span><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">plugins</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> never</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>lugins</span></span><span style="color:#999999;--shiki-dark:#666666">: []&#125;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>using an identity function puts all the config options in the IDE</div><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">config2</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">UserConfig</span></code></span>config2</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> defineConfig</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">config</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">UserConfig</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> UserConfig</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">+</span><span style="color:#2F798A;--shiki-dark:#4C9A91">3</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> overloads</span><span style="color:#999999;--shiki-dark:#666666">)</span></code><div class="twoslash-popup-docs">Type helper to make it easier to use vite.config.ts
accepts a direct 
&#123;@link 
UserConfig
&#125;
 object, or a function that returns it.
The function receives a 
&#123;@link 
ConfigEnv
&#125;
 object that exposes two properties:
&#96;command&#96; (either &#96;'build'&#96; or &#96;'serve'&#96;), and &#96;mode&#96;.</div></span>defineConfig</span></span><span style="color:#999999;--shiki-dark:#666666">(&#123; </span><span style="color:#998418;--shiki-dark:#B8A965"><span>p<span class="twoslash-completion-cursor"><ul class="twoslash-completion-list"><li><span class="twoslash-completions-icon completions-property"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">lugins</span></span></li><li><span class="twoslash-completions-icon completions-property"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">review</span></span></li><li><span class="twoslash-completions-icon completions-property"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">p</span><span class="twoslash-completions-unmatched">ublicDir</span></span></li></ul></span></span></span><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#B07D48;--shiki-dark:#BD976A">UserConfig</span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#B07D48;--shiki-dark:#BD976A">plugins</span><span style="color:#AB5959;--shiki-dark:#CB7676">?:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> PluginOption</span><span style="color:#999999;--shiki-dark:#666666">[]</span><span style="color:#AB5959;--shiki-dark:#CB7676"> |</span><span style="color:#AB5959;--shiki-dark:#CB7676"> undefined</span></code><div class="twoslash-popup-docs">Array of vite plugins to use.</div></span>lugins</span></span><span style="color:#999999;--shiki-dark:#666666">: []&#125;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre>`,j,S,la=`<pre class="code-copy-target hidden">import &#123; defineConfig &#125; from 'vite'


// @log: defining an object normally gets no intellisense help

const config1 = &#123; plugins: []&#125;
//                 ^|


// @log: using an identity function puts all the config options in the IDE

const config2 = defineConfig(&#123; plugins: []&#125;)
//                              ^|





</pre>`,N,m,Qs="The other use for identity functions is to get more type information from users without them needing to provide it. This use case is not as straightforward, but can enable some really incredible APIs.",Ds,g,js='<a aria-hidden="true" tabindex="-1" href="#narrowing-an-array-to-readonly-literals-of-an-object-type"><span class="icon icon-link"></span></a><a href="#narrowing-an-array-to-readonly-literals-of-an-object-type" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Narrowing an array to readonly literals of an object type',us,f,Ss="Imagine you are building a basic router. It needs to know the path and handler for each route, and it takes an array of objects with these values. Trivially, that might look something like this:",gs,V,na=`<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGT6VEycbEcRZcrNkoRgCSsYcbMmYNTCA"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">	handler</span><span style="color:#999999;--shiki-dark:#666666">: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])=> </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">Route</span><span style="color:#999999;--shiki-dark:#666666">[])&#123;</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> routes</span><span style="color:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre>`,U,Y,pa=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes(routes: Route[])&#123;
	return routes;
&#125;

</pre>`,O,E,Ns="This straightforward approach will produce a runtime array of values, but the type system doesn’t know the <em>exact</em> paths or <em>exact</em> parameters for each route. TypeScript only knows that paths are strings and handlers are functions. Hovering over the highlighted values below reveals that TypeScript knows only their broad types.",ws,P,ia=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGT6VEycbEcRZcrNkoRgCSsYcbMmYNAHpQqABaaN0kaMjMXSMKKECnKDQzC1orVzspLCgiqHwiUgByUMIITk44UIB3OEpOdnKAGihMcKKAPX7ezGKoVg5uXig+AFtbMjx6CFIKGgYFZRmyOYWBbgYiboioAeOh4rVOwuLSkihK+jg4dgAjEAhQqYfaDq6eo4HToqjLg8fhrdBhQ7Hf5qeSYIA"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">Route</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">Route</span><span style="color:#999999;--shiki-dark:#666666">[]):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>DefineRoutes</span></span><span style="color:#999999;--shiki-dark:#666666">([&#123;</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">    </span><span class="twoslash-highlighted"><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>path</span></span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">, </span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">    </span><span class="twoslash-highlighted"><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#B07D48;--shiki-dark:#BD976A"> any</span></code></span>handler</span></span></span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">message</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>message</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">)=> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">message</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>message</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#B07D48;--shiki-dark:#BD976A">String</span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#998418;--shiki-dark:#B8A965">length</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#B07D48;--shiki-dark:#BD976A">number</span></code><div class="twoslash-popup-docs">Returns the length of a String object.</div></span>length</span></span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">    &#125;,</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">    </span><span class="twoslash-highlighted"><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>path</span></span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">, </span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">    </span><span class="twoslash-highlighted"><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#B07D48;--shiki-dark:#BD976A"> any</span></code></span>handler</span></span></span><span style="color:#999999;--shiki-dark:#666666">: ()=>&#123;&#125;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;])</span></span>
<span class="line"></span></code></pre>`,J,W,ra=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes(routes: Route[])&#123;
	return routes;
&#125;
// ---cut---
const routes = DefineRoutes([&#123;
    path: '/hello/world', 
//  ^^^^
    handler: (message: string)=&gt; message.length
//  ^^^^^^^
    &#125;, &#123;
    path: '/goodbye/moon', 
//  ^^^^
    handler: ()=&gt;&#123;&#125;
//  ^^^^^^^
&#125;])
</pre>`,G,b,Vs="Now let’s build a version of this API where the type system has extremely narrow types for each value. That can provide many benefits that are impossible otherwise:",Cs,F,Us="<li>A type safe API that only allows calls to a route that match the route handler’s signature</li> <li>When specifying a route, instead of any string being allowed it could be limited to only <em>defined</em> routes, which would all pop up as suggestions in the intellisense</li>",vs,R,Ys="<code>Router</code> will need to be a generic so the type system can infer narrower types. Specifically, it needs to narrow in three ways:",ms,T,Os='<li>The <code>Route.path</code> values must be narrowed to <a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types" rel="nofollow">string literals</a></li> <li>The <code>Route.handler</code> values must be narrowly typed as their exact function signature</li> <li>Both 1&amp;2 need to happen separately for each value in the array</li>',fs,x,Ps='To do this requires a <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/#const-type-parameters" rel="nofollow"><code>const</code> type parameter</a> (introduced in TypeScript 5.0) and until TS 5.3 it requires using a <code>ReadonlyArray</code> as well. This should do it:',Es,q,ea=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGQA8uoxSgAVa8jJQIAD2QdPMBB47EacIACClJR4IHbuEIqKfJSIHqRuqbZyWAD0OVAFhUXFxQB65eUlVUUVtXX15TiUEMAIlMYpNmTMGphAA"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#B07D48;--shiki-dark:#BD976A">    path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    handler</span><span style="color:#999999;--shiki-dark:#666666">: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>Route</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">	</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>path</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">	</span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#B07D48;--shiki-dark:#BD976A"> any</span></code></span>handler</span></span><span style="color:#999999;--shiki-dark:#666666">: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">args</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> any</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>args</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])=> </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#AB5959;--shiki-dark:#CB7676">const</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span></code></span>DefineRoutes</span></span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span class="twoslash-highlighted"><span style="color:#AB5959;--shiki-dark:#CB7676">const</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> TRoutes</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#AB5959;--shiki-dark:#CB7676">const</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span></code></span>TRoutes</span></span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">interface</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> ReadonlyArray</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">></span></code></span>ReadonlyArray</span></span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#B07D48;--shiki-dark:#BD976A">    path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    handler</span><span style="color:#999999;--shiki-dark:#666666">: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>Route</span></span><span style="color:#999999;--shiki-dark:#666666">></span></span><span style="color:#999999;--shiki-dark:#666666">>(</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">routes</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#AB5959;--shiki-dark:#CB7676"> const </span><span style="color:#B07D48;--shiki-dark:#BD976A">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends readonly Route[]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> TRoutes</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#AB5959;--shiki-dark:#CB7676">const</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span></code></span>TRoutes</span></span><span style="color:#999999;--shiki-dark:#666666">)&#123;</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">	return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">routes</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#AB5959;--shiki-dark:#CB7676"> const </span><span style="color:#B07D48;--shiki-dark:#BD976A">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends readonly Route[]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre>`,Z,z,ta=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes&lt;const TRoutes extends ReadonlyArray&lt;Route&gt;&gt;(routes: TRoutes)&#123;
//                    ^^^^^                 ^^^^^^^^^^^^^^^^^^^^
	return routes;
&#125;

</pre>`,X,M,Js="The <code>const</code> type parameter tells TypeScript to infer the narrowest type possible. It does a great job at it, too. Check them out for the same call to <code>Router</code> as above, but using the new typing for it:",bs,$,ka=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGQA8uoxSgAVa8jJQIAD2QdPMBB47EacIACClJR4IHbuEIqKfJSIHqRuqbZyWNiUEMAIlMYpNmTMGgD0FVAAtHW6SHU1mI60ziUeUGhmFrRWmWR8UlhQo1D4RKQA5BWEEJyccBUA7nCUnOxTADRQmFWjAHpHB5hjUKwc3LxQfAC2tmR49BCkFDQMCsr3ZI-PAtwMIh7apQY5g05jNQ7EZjCYkKAzehwODsABGIAgFVuyNo212+1BxwhowuXB4-E+6EqILBRLU8kwjMZQA"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;, &#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> DefineRoutes</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;,</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;, &#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    ...;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]):</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#999999;--shiki-dark:#666666"> [...]</span></code></span>DefineRoutes</span></span><span style="color:#999999;--shiki-dark:#666666">([&#123;</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">    </span><span class="twoslash-highlighted"><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span></code></span>path</span></span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">, </span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">    </span><span class="twoslash-highlighted"><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#B07D48;--shiki-dark:#BD976A"> number</span></code></span>handler</span></span></span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">message</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>message</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">)=> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">message</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>message</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#B07D48;--shiki-dark:#BD976A">String</span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#998418;--shiki-dark:#B8A965">length</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#B07D48;--shiki-dark:#BD976A">number</span></code><div class="twoslash-popup-docs">Returns the length of a String object.</div></span>length</span></span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">    &#125;,</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#998418;--shiki-dark:#B8A965">    </span><span class="twoslash-highlighted"><span style="color:#998418;--shiki-dark:#B8A965"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span></code></span>path</span></span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">, </span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">    </span><span class="twoslash-highlighted"><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> ()</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#AB5959;--shiki-dark:#CB7676"> void</span></code></span>handler</span></span></span><span style="color:#999999;--shiki-dark:#666666">: ()=>&#123;&#125;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre>`,ss,as,ca=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes&lt;const TRoutes extends ReadonlyArray&lt;Route&gt;&gt;(routes: TRoutes)&#123;
	return routes;
&#125;
// ---cut---
const routes = DefineRoutes([&#123;
    path: '/hello/world', 
//  ^^^^
    handler: (message: string)=&gt; message.length
//  ^^^^^^^
    &#125;, &#123;
    path: '/goodbye/moon', 
//  ^^^^
    handler: ()=&gt;&#123;&#125;
//  ^^^^^^^
&#125;])




</pre>`,os,_,Ws="Notice that both the <code>path</code> and <code>handler</code> values are getting typed as narrowly as possible. That makes it possible to do all sorts of cool things with them:",Fs,ls,ha=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGQA8uoxSgAVa8jJQIAD2QdPMBB47EacIACClJR4IHbuEIqKfJSIHqRuqbZyWNiUEMAIlMYpNmTMGo60ziUeUGhmFrRWmWR8UlhQnVD4RKQA5AD0hBCcnHADAO5wlJzsfQA0UJgDA50AehtrmF1QrBzcvFB8ALa2ZHj0EKQUNAwKyqdk55cC3AxEy6tQmz-bXWqLDpdHokKCDehwODsABGIAgA2OkNoCyWK3Wmz+nT2XB4-Hu6A0aO+Pw26nknygAFpqbokNTKZgKQABMb0UjxTzUTx4KCgSBQHSGYxwTS84bdAiETz4J4Qdi8uBQAAG8UofDkSswfOgHLqvPAEBFUBqtiktAQx2hPBkUj6IL6Mgp6N+mCAA"><code><span class="line"></span>
<span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span class="twoslash-highlighted"><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Routes</span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666"> |</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span></code></span>Routes</span></span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#AB5959;--shiki-dark:#CB7676"> typeof</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;, &#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B07D48;--shiki-dark:#BD976A">number</span><span style="color:#999999;--shiki-dark:#666666">][</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">]</span></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>Routes is a type union of the paths passed to &#96;Router()&#96;</div><span class="line"></span>
<span class="line"></span></code></pre>`,ns,ps,da=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes&lt;const TRoutes extends ReadonlyArray&lt;Route&gt;&gt;(routes: TRoutes)&#123;
	return routes;
&#125;
const routes = DefineRoutes([&#123;
    path: '/hello/world', 
//  ^^^^
    handler: (message: string)=&gt; message.length
//  ^^^^^^^
    &#125;, &#123;
    path: '/goodbye/moon', 
//  ^^^^
    handler: ()=&gt;&#123;&#125;
//  ^^^^^^^
&#125;])
// ---cut---

// @log: Routes is a type union of the paths passed to &#96;Router()&#96;
type Routes = typeof routes[number]['path']
//   ^^^^^^

</pre>`,is,L,Gs="If you brave slightly gnarlier TypeScript, you can get some truly incredible results:",Rs,rs,ya=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/C4TwDgpgBASg9gV2NAvFA3gKAJBgIbAAWAXFAM7ABOAlgHYDmA3DoXrQCYA2ElpAFADoheSvTKk2IANoBdAJQoAfFEmYAvpgBmCWgGNg1OLSgARCJroR4SCGQA8uoxSgAVa8jJQIAD2QdPMBB47EacIACClJR4IHbuEIqKfJSIHqRuqbZyWNiUEMAIlMYpNmTMGo60ziUeUGhmFrRWmWR8UlhQnVD4RKQA5AD0hBCcnHADAO5wlJzsfQA0UJgDA50AehtrmF1QrBzcvFB8ALa2ZHj0EKQUNAwKyqdk55cC3AxEy6tQmz-bXWqLDpdHokKCDehwODsABGIAgA2OkNoCyWK3Wmz+nT2XB4-Hu6A0aO+Pw26nknygAAExvRSPFPNRPHgoKBIFAdIZjHBNCzht0CIRPPgnhB2Cy4FAAAbxSh8OSSzCYVnQel1FngCDcqA1WxSWgIY7QngyKR9EF9GQU9G-NEAWntuiQ9ttFOpcFpUAAwnkCNBmTrKFAtegQaRsQc1PzqJQyFodPpOVAALJ4ADWzRslDsGVKXl8EH8sCCIVoYUi0Vi8USfD+OvEOY82zkGFr+UKxRaAmOeDAyUySj46CkOoEIJkpBH4Z4ajkzbwnj+Q5cUDornpeoNRsoMhUnhcpvNMnHrlNU8oFrU5UwlWqmUDaBT6ZlfdKcmYrppEg4Xnn1DCK9oAA3OB015CBjigCZqCIboUkgQNlXIPBNHyEBFQDU0hhGMZJmmWYLT4PoAHE8nyOgxAAQj6OQrR2b4AB9FUwIA"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> MakeRouter</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">]]: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">handler</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">];</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>MakeRouter</span></span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> TRoutes</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> MakeRouter</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">]]: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">handler</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">];</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>TRoutes</span></span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">interface</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> ReadonlyArray</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">></span></code></span>ReadonlyArray</span></span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">type</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#B07D48;--shiki-dark:#BD976A">    path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    handler</span><span style="color:#999999;--shiki-dark:#666666">: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>Route</span></span><span style="color:#999999;--shiki-dark:#666666">>>(</span></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>Create a router of &#123;path: handler&#125; pairs</div><span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A">  </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">routes</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> TRoutes</span><span style="color:#B07D48;--shiki-dark:#BD976A"> extends</span><span style="color:#B07D48;--shiki-dark:#BD976A"> readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> TRoutes</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> MakeRouter</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">]]: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">handler</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">];</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>TRoutes</span></span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666"> )</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">  return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">routes</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> TRoutes</span><span style="color:#B07D48;--shiki-dark:#BD976A"> extends</span><span style="color:#B07D48;--shiki-dark:#BD976A"> readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#B07D48;--shiki-dark:#BD976A">ReadonlyArray</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#B07D48;--shiki-dark:#BD976A">Route</span><span style="color:#999999;--shiki-dark:#666666">>.</span><span style="color:#59873A;--shiki-dark:#80A665">map</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;&#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    [</span><span style="color:#B07D48;--shiki-dark:#BD976A">x</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">]: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;>(</span><span style="color:#59873A;--shiki-dark:#80A665">callbackfn</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">value</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">Route</span><span style="color:#999999;--shiki-dark:#666666">, </span><span style="color:#B07D48;--shiki-dark:#BD976A">index</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">, </span><span style="color:#B07D48;--shiki-dark:#BD976A">array</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]) => &#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    [</span><span style="color:#B07D48;--shiki-dark:#BD976A">x</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">]: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;,</span><span style="color:#B07D48;--shiki-dark:#BD976A"> thisArg</span><span style="color:#AB5959;--shiki-dark:#CB7676">?</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    [</span><span style="color:#B07D48;--shiki-dark:#BD976A">x</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">]: (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[]) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;[]</span></code><div class="twoslash-popup-docs">Calls a defined callback function on each element of an array, and returns an array that contains the results.</div><div class="twoslash-popup-docs twoslash-popup-docs-tags"><span class="twoslash-popup-docs-tag"><span class="twoslash-popup-docs-tag-name">@param</span><span class="twoslash-popup-docs-tag-value">callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.</span></span><span class="twoslash-popup-docs-tag"><span class="twoslash-popup-docs-tag-name">@param</span><span class="twoslash-popup-docs-tag-value">thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</span></span></div></span>map</span></span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">route</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> Route</span></code></span>route</span></span><span style="color:#999999;--shiki-dark:#666666">=>(&#123;[</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">route</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> Route</span></code></span>route</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">path</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> string</span></code></span>path</span></span><span style="color:#999999;--shiki-dark:#666666">]: </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">route</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> Route</span></code></span>route</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">handler</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (...</span><span style="color:#B07D48;--shiki-dark:#BD976A">args</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">any</span><span style="color:#999999;--shiki-dark:#666666">[])</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#B07D48;--shiki-dark:#BD976A"> any</span></code></span>handler</span></span><span style="color:#999999;--shiki-dark:#666666">&#125;))</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE"> </span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">  &#123;[</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> T</span></code></span>T</span></span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> TRoutes</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> MakeRouter</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#AB5959;--shiki-dark:#CB7676"> extends</span><span style="color:#AB5959;--shiki-dark:#CB7676"> readonly</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> Route</span><span style="color:#999999;--shiki-dark:#666666">[]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">TRoutes</span><span style="color:#999999;--shiki-dark:#666666">):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> TRoutes</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">]]: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">handler</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">];</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>TRoutes</span></span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B07D48;--shiki-dark:#BD976A">number</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#1E754F;--shiki-dark:#4D9375"> as</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> T</span></code></span>T</span></span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">path</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">]]</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> T</span></code></span>T</span></span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">handler</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">]&#125;;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">router</span><span style="color:#999999;--shiki-dark:#666666">: &#123;</span><br><span style="color:#B5695999;--shiki-dark:#C98A7D99">    "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#B5695999;--shiki-dark:#C98A7D99">    "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>router</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> MakeRouter</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;,</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;, &#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    ...;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#999999;--shiki-dark:#666666">    ...;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>MakeRouter</span></span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">routes</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">readonly</span><span style="color:#999999;--shiki-dark:#666666"> [&#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;, &#123;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#B07D48;--shiki-dark:#BD976A"> path</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#AB5959;--shiki-dark:#CB7676">    readonly</span><span style="color:#59873A;--shiki-dark:#80A665"> handler</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;]</span></code></span>routes</span></span><span style="color:#999999;--shiki-dark:#666666">);</span></span>
<span class="line"></span>
<span class="line"></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>and easily invoke them with proper type safety</div><span class="line"><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">router</span><span style="color:#999999;--shiki-dark:#666666">: &#123;</span><br><span style="color:#B5695999;--shiki-dark:#C98A7D99">    "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">message</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">string</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">number</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#B5695999;--shiki-dark:#C98A7D99">    "</span><span style="color:#B56959;--shiki-dark:#C98A7D">/goodbye/moon</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">: () => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>router</span></span><span style="color:#999999;--shiki-dark:#666666">[</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D"><span>/<span class="twoslash-completion-cursor"><ul class="twoslash-completion-list"><li><span class="twoslash-completions-icon completions-property"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">/</span><span class="twoslash-completions-unmatched">goodbye/moon</span></span></li><li><span class="twoslash-completions-icon completions-property"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9"></path></svg></span><span><span class="twoslash-completions-matched">/</span><span class="twoslash-completions-unmatched">hello/world</span></span></li></ul></span></span></span><span style="color:#B56959;--shiki-dark:#C98A7D">hello/world</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">](</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">Greetings!</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#999999;--shiki-dark:#666666">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre>`,es,ts,Aa=`<pre class="code-copy-target hidden">type Route = &#123;
	path: string;
	handler: (...args: any[])=&gt; any
&#125;
function DefineRoutes&lt;const TRoutes extends ReadonlyArray&lt;Route&gt;&gt;(routes: TRoutes)&#123;
	return routes;
&#125;
const routes = DefineRoutes([&#123;
    path: '/hello/world', 
//  ^^^^
    handler: (message: string)=&gt; message.length
//  ^^^^^^^
    &#125;, &#123;
    path: '/goodbye/moon', 
//  ^^^^
    handler: ()=&gt;&#123;&#125;
//  ^^^^^^^
&#125;])
// @log: Routes is a type union of the paths passed to &#96;Router()&#96;

type Routes = typeof routes[number]['path']
//   ^^^^^^
// ---cut---
// @log: Create a router of &#123;path: handler&#125; pairs
function MakeRouter&lt;TRoutes extends ReadonlyArray&lt;Route&gt;&gt;(
  routes:TRoutes
 ) &#123;
  return routes.map(route=&gt;(&#123;[route.path]: route.handler&#125;)) as 
  &#123;[T in TRoutes[number] as T['path']]: T['handler']&#125;;
&#125;
const router = MakeRouter(routes);

// @log: and easily invoke them with proper type safety

router['/hello/world']('Greetings!')
//       ^|


</pre>`,ks,w,qs='<a aria-hidden="true" tabindex="-1" href="#type-transformations"><span class="icon icon-link"></span></a><a href="#type-transformations" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Type transformations',Ts,C,Zs='<a aria-hidden="true" tabindex="-1" href="#reverse-mapped-types"><span class="icon icon-link"></span></a><a href="#reverse-mapped-types" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Reverse mapped types',xs,I,zs="A reverse mapped type lets you inject data from the inferred type back into the inferred type.",Ms,H,Xs="In this example, <code>injectEventNames</code> adds type information to the function parameters on the object passed to it.",_s,cs,Ba=`<pre class="shiki shiki-themes vitesse-light vitesse-dark twoslash lsp" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0" ts twoslash data-tsplay="https://typescriptlang.org/play/#code/KYDwDg9gTgLgBAMwK4DsDGMCWEV0ygK2AwFEA3YFGAOQEMBbYAZwB4AVAPgAoIAjAgFxwA3gG0A0nlwBrYAE8ICOGwC6QrrLlDxASjgBeDnDIRMAEwC+e4QCg4cKMBhIouPgQDcNizYD0vuAABABsIAHMhaggsNGA4GAALWngAAxQGYBS8Jni5MGAzOFocgCIEiAooEps0HCZ4YAoqHP0pIlImmgymLmE4csr1dMY9QzhalCYIYOAAOlCwrmHgPSs-APtNre2d3b2tgD0jg5sbIA"><code><span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">export</span><span style="color:#AB5959;--shiki-dark:#CB7676"> function</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> injectEventNames</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">obj</span><span style="color:#999999;--shiki-dark:#666666">: &#123; [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">; &#125;):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>injectEventNames</span></span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> T</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> injectEventNames</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">obj</span><span style="color:#999999;--shiki-dark:#666666">: &#123; [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">; &#125;):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>T</span></span><span style="color:#999999;--shiki-dark:#666666">>(</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">obj</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#B07D48;--shiki-dark:#BD976A">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#B07D48;--shiki-dark:#BD976A"> keyof</span><span style="color:#B07D48;--shiki-dark:#BD976A"> T</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:#999999;--shiki-dark:#666666">;</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>obj</span></span><span style="color:#999999;--shiki-dark:#666666">: &#123;[</span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> K</span></code></span>K</span></span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> T</span><span style="color:#59873A;--shiki-dark:#80A665"> in</span><span style="color:#59873A;--shiki-dark:#80A665"> injectEventNames</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;</span><span style="color:#2E8F82;--shiki-dark:#5DA994">T</span><span style="color:#999999;--shiki-dark:#666666">>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">obj</span><span style="color:#999999;--shiki-dark:#666666">: &#123; [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">; &#125;):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#AB5959;--shiki-dark:#CB7676"> keyof</span><span style="color:#2E8F82;--shiki-dark:#5DA994"> T</span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>T</span></span><span style="color:#999999;--shiki-dark:#666666">]: (</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">key</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B07D48;--shiki-dark:#BD976A"> K</span><span style="color:#B07D48;--shiki-dark:#BD976A"> extends</span><span style="color:#B07D48;--shiki-dark:#BD976A"> keyof</span><span style="color:#B07D48;--shiki-dark:#BD976A"> T</span></code></span>key</span></span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">type</span><span style="color:#B07D48;--shiki-dark:#BD976A"> parameter</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#59873A;--shiki-dark:#80A665"> K</span></code></span>K</span></span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">&#125;)</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span></span>
<span class="line"><span style="color:#1E754F;--shiki-dark:#4D9375">  return</span><span style="color:#B07D48;--shiki-dark:#BD976A"> </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">obj</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><span style="color:#999999;--shiki-dark:#666666"> [</span><span style="color:#B07D48;--shiki-dark:#BD976A">K</span><span style="color:#AB5959;--shiki-dark:#CB7676"> in</span><span style="color:#B07D48;--shiki-dark:#BD976A"> keyof</span><span style="color:#B07D48;--shiki-dark:#BD976A"> T</span><span style="color:#999999;--shiki-dark:#666666">]</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">K</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#AB5959;--shiki-dark:#CB7676"> void</span><span style="color:#999999;--shiki-dark:#666666">;</span><span style="color:#999999;--shiki-dark:#666666"> &#125;</span></code></span>obj</span></span><span style="color:#999999;--shiki-dark:#666666">;</span></span>
<span class="line"><span style="color:#999999;--shiki-dark:#666666">&#125;</span></span>
<span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">const </span><span style="color:#B07D48;--shiki-dark:#BD976A">events</span><span style="color:#999999;--shiki-dark:#666666">: &#123;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    hover</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>events</span></span><span style="color:#999999;--shiki-dark:#666666"> =</span><span style="color:#59873A;--shiki-dark:#80A665"> </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">function</span><span style="color:#59873A;--shiki-dark:#80A665"> injectEventNames</span><span style="color:#999999;--shiki-dark:#666666">&#x3C;&#123;</span><br><span style="color:#B07D48;--shiki-dark:#BD976A">    hover</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">unknown</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;>(</span><span style="color:#B07D48;--shiki-dark:#BD976A">obj</span><span style="color:#999999;--shiki-dark:#666666">: &#123;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    hover</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;):</span><span style="color:#999999;--shiki-dark:#666666"> &#123;</span><br><span style="color:#59873A;--shiki-dark:#80A665">    hover</span><span style="color:#999999;--shiki-dark:#666666">: (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#2E8F82;--shiki-dark:#5DA994">void</span><span style="color:#999999;--shiki-dark:#666666">;</span><br><span style="color:#999999;--shiki-dark:#666666">&#125;</span></code></span>injectEventNames</span></span><span style="color:#999999;--shiki-dark:#666666">(&#123; </span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">hover</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#999999;--shiki-dark:#666666"> (</span><span style="color:#B07D48;--shiki-dark:#BD976A">key</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span><span style="color:#999999;--shiki-dark:#666666">)</span><span style="color:#999999;--shiki-dark:#666666"> =></span><span style="color:#AB5959;--shiki-dark:#CB7676"> void</span></code></span>hover</span></span><span style="color:#999999;--shiki-dark:#666666">: (</span><span class="twoslash-highlighted"><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">name</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span></code></span>name</span></span></span><span style="color:#999999;--shiki-dark:#666666">) => </span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#AB5959;--shiki-dark:#CB7676">var </span><span style="color:#B07D48;--shiki-dark:#BD976A">console</span><span style="color:#999999;--shiki-dark:#666666">: </span><span style="color:#2E8F82;--shiki-dark:#5DA994">Console</span></code></span>console</span></span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#59873A;--shiki-dark:#80A665"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#B07D48;--shiki-dark:#BD976A">Console</span><span style="color:#999999;--shiki-dark:#666666">.</span><span style="color:#59873A;--shiki-dark:#80A665">log</span><span style="color:#999999;--shiki-dark:#666666">(...</span><span style="color:#B07D48;--shiki-dark:#BD976A">data</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#B07D48;--shiki-dark:#BD976A">any</span><span style="color:#999999;--shiki-dark:#666666">[])</span><span style="color:#393A34;--shiki-dark:#DBD7CAEE">: </span><span style="color:#AB5959;--shiki-dark:#CB7676">void</span></code><div class="twoslash-popup-docs">[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)</div></span>log</span></span><span style="color:#999999;--shiki-dark:#666666">(</span><span style="color:#B07D48;--shiki-dark:#BD976A"><span class="twoslash-hover"><span class="twoslash-popup-container"><code class="twoslash-popup-code"><span style="color:#59873A;--shiki-dark:#80A665">name</span><span style="color:#999999;--shiki-dark:#666666">:</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> "</span><span style="color:#B56959;--shiki-dark:#C98A7D">hover</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">"</span></code></span>name</span></span><span style="color:#999999;--shiki-dark:#666666">) &#125;)</span></span><div class="twoslash-tag-line twoslash-tag-log-line"><span class="twoslash-tag-icon tag-log-icon"><svg viewBox="0 0 32 32"><path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8"></path><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2M6 6v20h20V6Z"></path></svg></span>Notice that &#96;name&#96; is typed as "hover"</div><span class="line"></span>
<span class="line"></span></code></pre>`,hs,ds,Da=`<pre class="code-copy-target hidden">export function injectEventNames&lt;T&gt;(obj: &#123;[K in keyof T]: (key: K) =&gt; void&#125;) &#123;
  return obj;
&#125;
// @log: Notice that &#96;name&#96; is typed as "hover"
const events = injectEventNames(&#123; hover: (name) =&gt; console.log(name) &#125;)
//                                        ^^^^

</pre>`,ys;return{c(){i=r("p"),i.textContent=u,B=n(),A=r("p"),A.innerHTML=k,y=n(),D=r("ul"),D.innerHTML=Hs,As=n(),v=r("p"),v.innerHTML=Ks,Bs=n(),Q=new h(!1),j=c(),S=new h(!1),N=n(),m=r("p"),m.textContent=Qs,Ds=n(),g=r("h3"),g.innerHTML=js,us=n(),f=r("p"),f.textContent=Ss,gs=n(),V=new h(!1),U=c(),Y=new h(!1),O=n(),E=r("p"),E.innerHTML=Ns,ws=n(),P=new h(!1),J=c(),W=new h(!1),G=n(),b=r("p"),b.textContent=Vs,Cs=n(),F=r("ul"),F.innerHTML=Us,vs=n(),R=r("p"),R.innerHTML=Ys,ms=n(),T=r("ol"),T.innerHTML=Os,fs=n(),x=r("p"),x.innerHTML=Ps,Es=n(),q=new h(!1),Z=c(),z=new h(!1),X=n(),M=r("p"),M.innerHTML=Js,bs=n(),$=new h(!1),ss=c(),as=new h(!1),os=n(),_=r("p"),_.innerHTML=Ws,Fs=n(),ls=new h(!1),ns=c(),ps=new h(!1),is=n(),L=r("p"),L.textContent=Gs,Rs=n(),rs=new h(!1),es=c(),ts=new h(!1),ks=n(),w=r("h2"),w.innerHTML=qs,Ts=n(),C=r("h3"),C.innerHTML=Zs,xs=n(),I=r("p"),I.textContent=zs,Ms=n(),H=r("p"),H.innerHTML=Xs,_s=n(),cs=new h(!1),hs=c(),ds=new h(!1),ys=c(),this.h()},l(s){i=e(s,"P",{"data-svelte-h":!0}),t(i)!=="svelte-29oivh"&&(i.textContent=u),B=p(s),A=e(s,"P",{"data-svelte-h":!0}),t(A)!=="svelte-2rbqje"&&(A.innerHTML=k),y=p(s),D=e(s,"UL",{"data-svelte-h":!0}),t(D)!=="svelte-1s2il9t"&&(D.innerHTML=Hs),As=p(s),v=e(s,"P",{"data-svelte-h":!0}),t(v)!=="svelte-pqii4v"&&(v.innerHTML=Ks),Bs=p(s),Q=d(s,!1),j=c(),S=d(s,!1),N=p(s),m=e(s,"P",{"data-svelte-h":!0}),t(m)!=="svelte-1s1yhdv"&&(m.textContent=Qs),Ds=p(s),g=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(g)!=="svelte-1a6ohbd"&&(g.innerHTML=js),us=p(s),f=e(s,"P",{"data-svelte-h":!0}),t(f)!=="svelte-k6lrmt"&&(f.textContent=Ss),gs=p(s),V=d(s,!1),U=c(),Y=d(s,!1),O=p(s),E=e(s,"P",{"data-svelte-h":!0}),t(E)!=="svelte-fnoiew"&&(E.innerHTML=Ns),ws=p(s),P=d(s,!1),J=c(),W=d(s,!1),G=p(s),b=e(s,"P",{"data-svelte-h":!0}),t(b)!=="svelte-h40ul5"&&(b.textContent=Vs),Cs=p(s),F=e(s,"UL",{"data-svelte-h":!0}),t(F)!=="svelte-gyv5x6"&&(F.innerHTML=Us),vs=p(s),R=e(s,"P",{"data-svelte-h":!0}),t(R)!=="svelte-1lm0xw6"&&(R.innerHTML=Ys),ms=p(s),T=e(s,"OL",{"data-svelte-h":!0}),t(T)!=="svelte-e9hn07"&&(T.innerHTML=Os),fs=p(s),x=e(s,"P",{"data-svelte-h":!0}),t(x)!=="svelte-1nh4jc2"&&(x.innerHTML=Ps),Es=p(s),q=d(s,!1),Z=c(),z=d(s,!1),X=p(s),M=e(s,"P",{"data-svelte-h":!0}),t(M)!=="svelte-1qe73x9"&&(M.innerHTML=Js),bs=p(s),$=d(s,!1),ss=c(),as=d(s,!1),os=p(s),_=e(s,"P",{"data-svelte-h":!0}),t(_)!=="svelte-t44mj3"&&(_.innerHTML=Ws),Fs=p(s),ls=d(s,!1),ns=c(),ps=d(s,!1),is=p(s),L=e(s,"P",{"data-svelte-h":!0}),t(L)!=="svelte-g39x6v"&&(L.textContent=Gs),Rs=p(s),rs=d(s,!1),es=c(),ts=d(s,!1),ks=p(s),w=e(s,"H2",{id:!0,"data-svelte-h":!0}),t(w)!=="svelte-pbuned"&&(w.innerHTML=qs),Ts=p(s),C=e(s,"H3",{id:!0,"data-svelte-h":!0}),t(C)!=="svelte-11gauqq"&&(C.innerHTML=Zs),xs=p(s),I=e(s,"P",{"data-svelte-h":!0}),t(I)!=="svelte-1e0yb37"&&(I.textContent=zs),Ms=p(s),H=e(s,"P",{"data-svelte-h":!0}),t(H)!=="svelte-b6ddq4"&&(H.innerHTML=Xs),_s=p(s),cs=d(s,!1),hs=c(),ds=d(s,!1),ys=c(),this.h()},h(){Q.a=j,S.a=N,Ls(g,"id","narrowing-an-array-to-readonly-literals-of-an-object-type"),V.a=U,Y.a=O,P.a=J,W.a=G,q.a=Z,z.a=X,$.a=ss,as.a=os,ls.a=ns,ps.a=is,rs.a=es,ts.a=ks,Ls(w,"id","type-transformations"),Ls(C,"id","reverse-mapped-types"),cs.a=hs,ds.a=ys},m(s,a){o(s,i,a),o(s,B,a),o(s,A,a),o(s,y,a),o(s,D,a),o(s,As,a),o(s,v,a),o(s,Bs,a),Q.m(oa,s,a),o(s,j,a),S.m(la,s,a),o(s,N,a),o(s,m,a),o(s,Ds,a),o(s,g,a),o(s,us,a),o(s,f,a),o(s,gs,a),V.m(na,s,a),o(s,U,a),Y.m(pa,s,a),o(s,O,a),o(s,E,a),o(s,ws,a),P.m(ia,s,a),o(s,J,a),W.m(ra,s,a),o(s,G,a),o(s,b,a),o(s,Cs,a),o(s,F,a),o(s,vs,a),o(s,R,a),o(s,ms,a),o(s,T,a),o(s,fs,a),o(s,x,a),o(s,Es,a),q.m(ea,s,a),o(s,Z,a),z.m(ta,s,a),o(s,X,a),o(s,M,a),o(s,bs,a),$.m(ka,s,a),o(s,ss,a),as.m(ca,s,a),o(s,os,a),o(s,_,a),o(s,Fs,a),ls.m(ha,s,a),o(s,ns,a),ps.m(da,s,a),o(s,is,a),o(s,L,a),o(s,Rs,a),rs.m(ya,s,a),o(s,es,a),ts.m(Aa,s,a),o(s,ks,a),o(s,w,a),o(s,Ts,a),o(s,C,a),o(s,xs,a),o(s,I,a),o(s,Ms,a),o(s,H,a),o(s,_s,a),cs.m(Ba,s,a),o(s,hs,a),ds.m(Da,s,a),o(s,ys,a)},p:ga,d(s){s&&(l(i),l(B),l(A),l(y),l(D),l(As),l(v),l(Bs),l(j),Q.d(),S.d(),l(N),l(m),l(Ds),l(g),l(us),l(f),l(gs),l(U),V.d(),Y.d(),l(O),l(E),l(ws),l(J),P.d(),W.d(),l(G),l(b),l(Cs),l(F),l(vs),l(R),l(ms),l(T),l(fs),l(x),l(Es),l(Z),q.d(),z.d(),l(X),l(M),l(bs),l(ss),$.d(),as.d(),l(os),l(_),l(Fs),l(ns),ls.d(),ps.d(),l(is),l(L),l(Rs),l(es),rs.d(),ts.d(),l(ks),l(w),l(Ts),l(C),l(xs),l(I),l(Ms),l(H),l(_s),l(hs),cs.d(),l(ys),ds.d())}}}function Ma(K){let i,u;const B=[K[0],aa];let A={$$slots:{default:[xa]},$$scope:{ctx:K}};for(let k=0;k<B.length;k+=1)A=Is(A,B[k]);return i=new Ta({props:A}),{c(){va(i.$$.fragment)},l(k){ma(i.$$.fragment,k)},m(k,y){fa(i,k,y),u=!0},p(k,[y]){const D=y&1?Ra(B,[y&1&&sa(k[0]),y&0&&sa(aa)]):{};y&2&&(D.$$scope={dirty:y,ctx:k}),i.$set(D)},i(k){u||(Ea(i.$$.fragment,k),u=!0)},o(k){ba(i.$$.fragment,k),u=!1},d(k){Fa(i,k)}}}const aa={title:"Identity functions",description:"Identity functions make it possible to provide a much better developer experience at API boundaries by improving the type",slug:"notes/identity-functions",publish:!0,lastmod:"2024-05-19T00:00:00.000Z",date:"2024-05-19T00:00:00.000Z",aliases:null,tags:["status/seedling"],readTime:5,internalLinks:[],flashcards:[]};function _a(K,i,u){return K.$$set=B=>{u(0,i=Is(Is({},i),$s(B)))},i=$s(i),[i]}class Qa extends wa{constructor(i){super(),Ca(this,i,_a,Ma,ua,{})}}export{Qa as default,aa as metadata};
